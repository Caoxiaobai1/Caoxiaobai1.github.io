<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  <icon>http://example.com/icon.png</icon>
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2025-09-05T08:50:18.867Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>深夜随笔</title>
    <link href="http://example.com/2025/09/05/%E6%B7%B1%E5%A4%9C%E9%9A%8F%E7%AC%94/"/>
    <id>http://example.com/2025/09/05/%E6%B7%B1%E5%A4%9C%E9%9A%8F%E7%AC%94/</id>
    <published>2025-09-05T08:40:32.000Z</published>
    <updated>2025-09-05T08:50:18.867Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="fb381ce7a10bd52729ac232fe2ecb043d8c9029deaf0fcfc1b9b89e8bb873efd">165d50f05814027fb7fe5e4ae8a088d815fc822483a55d3290f51b90141d24e456b2a76bac5a13b0748b2437bcf0cec3</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好，这里需要密码。</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">有东西被加密了，请输入密码查看。</summary>
    
    
    
    <category term="深夜随笔" scheme="http://example.com/categories/%E6%B7%B1%E5%A4%9C%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="随笔" scheme="http://example.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>资料分析</title>
    <link href="http://example.com/2025/09/05/%E8%B5%84%E6%96%99%E5%88%86%E6%9E%90/"/>
    <id>http://example.com/2025/09/05/%E8%B5%84%E6%96%99%E5%88%86%E6%9E%90/</id>
    <published>2025-09-05T02:45:00.000Z</published>
    <updated>2025-09-05T06:41:41.165Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一章-实用速算技巧"><a class="markdownIt-Anchor" href="#第一章-实用速算技巧"></a> 第一章　实用速算技巧</h1><h2 id="11-加法技巧尾数法-高位叠加法"><a class="markdownIt-Anchor" href="#11-加法技巧尾数法-高位叠加法"></a> 1.1　加法技巧–尾数法、高位叠加法</h2><p><strong>1.1.1</strong>　<strong>尾数法</strong></p><p>在多个数字精确求和或求差时，从“尾数”处入手，为保证精确与速度，一般可观察两位。</p><p><img src="image-20250905104917650.png" alt="image-20250905104917650" /></p><p><strong>【例1】</strong></p><p>求出2014～2017年全国残疾人康复机构数量之和：</p><p>A．29576               B．30217</p><p>C．33418               D．36439</p><p><strong>【例2】（2019年安徽特岗）</strong></p><p>2011年，商标局共受理商标注册申请1416785件，同比增长32.1%，再创历史新高，连续十年位居世界第一。其中商标注册网上申请达804926件。</p><p>外国来华申请量（包括马德里商标国际注册领土延伸申请）排名前10位的国家或地区分别是美国、日本、韩国、英国、德国、英属维尔京群岛、法国、意大利、瑞士、澳大利亚，申请量分别为26060件、19715件、6318件、5588件、3796件、3461件、3243件、2865件、2124件、2085件，这10个国家或地区的申请量之和占外国在华申请总数的78.5%。</p><p>问题：2011年，外国来华商标申请量排名前10位的国家或地区的申请量之和为：</p><p>A．75255件              B．75525件</p><p>C．76215件              D．79585件</p><p><strong>1.1.2</strong>　<strong>高位叠加</strong></p><p>和我们记忆中的列竖式做加法顺序正相反，高位叠加是从高位加起，抓住问题的主要矛盾。非精确求和或没有选项可以参考时，可以选用高位叠加法。</p><p><img src="image-20250905112551987.png" alt="image-20250905112551987" /></p><p><strong>图　2014～2021年全国零售药店终端药品销售额和同比增速</strong></p><p><strong>【例1】</strong></p><p>求出十三五时期全国零售药店终端药品销售额：</p><p><strong>【例2】（2025年湖北选调）</strong></p><p><img src="image-20250905112642137.png" alt="image-20250905112642137" /></p><p><strong>图　2023年11月～2024年11月证券期货经营机构资管产品月度备案数量及规模趋势</strong></p><p>问题：2024年上半年，证券期货经营机构共备案私募资管产品:</p><p>A．不到4400支              B．4400～4500支之间</p><p>C．4500～4600支之间          D．超过4600支</p><h2 id="12-减法技巧分段法"><a class="markdownIt-Anchor" href="#12-减法技巧分段法"></a> 1.2　减法技巧–分段法</h2><p>将多位数（三位、四位）的减法分成两段，尽可能保证不用借位；若无法保证不借位，可以用负数代替借位。</p><p><strong>【例题】</strong></p><p>512－481          532－328                721－688</p><p>745－372          938－776                822－484</p><p>1723－494         245－177                622－478</p><p><strong>【例1】（2023年国考）</strong></p><p><strong>表　2021年2～12月各月末固定互联网宽带接入用户数</strong></p><table><thead><tr><th>万户</th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td></td><td></td><td></td><td></td></tr><tr><td>接入用户</td><td>其中：  xDSL用户</td><td>光纤用户</td><td>其中：  100Mbps速率以上用户</td><td></td></tr><tr><td>2月</td><td>49222</td><td>296</td><td>46274</td><td>44516</td></tr><tr><td>3月</td><td>49726</td><td>295</td><td>46707</td><td>45072</td></tr><tr><td>4月</td><td>50061</td><td>293</td><td>47053</td><td>45517</td></tr><tr><td>5月</td><td>50516</td><td>292</td><td>47515</td><td>46104</td></tr><tr><td>6月</td><td>50961</td><td>290</td><td>47968</td><td>46649</td></tr><tr><td>7月</td><td>51374</td><td>290</td><td>48416</td><td>47173</td></tr><tr><td>8月</td><td>51865</td><td>290</td><td>48921</td><td>47710</td></tr><tr><td>9月</td><td>52629</td><td>291</td><td>49643</td><td>48450</td></tr><tr><td>10月</td><td>53146</td><td>290</td><td>50077</td><td>49026</td></tr><tr><td>11月</td><td>53540</td><td>288</td><td>50466</td><td>49557</td></tr><tr><td>12月</td><td>53579</td><td>283</td><td>50551</td><td>49848</td></tr></tbody></table><p>问题：2021年下半年，我国固定互联网宽带接入用户中，光纤用户数增量超过500万户的月份有几个：</p><p>A．2                 B．3</p><p>C．4                 D．5</p><p><strong>【例2】（2022年联考）</strong></p><p><strong>表　2011～2020年全国城市生活垃圾无害化处理状况</strong></p><table><thead><tr><th></th><th>总清运量  （万吨）</th><th>无害化处理场  （座）</th><th>无害化处理能力  （万吨/日）</th><th>无害化处理量  （万吨）</th></tr></thead><tbody><tr><td>2011年</td><td>16395</td><td>677</td><td>40.91</td><td>13090</td></tr><tr><td>2012年</td><td>17081</td><td>701</td><td>44.63</td><td>14490</td></tr><tr><td>2013年</td><td>17239</td><td>765</td><td>49.23</td><td>15394</td></tr><tr><td>2014年</td><td>17860</td><td>818</td><td>53.35</td><td>16394</td></tr><tr><td>2015年</td><td>19142</td><td>890</td><td>57.69</td><td>18013</td></tr><tr><td>2016年</td><td>20362</td><td>940</td><td>62.14</td><td>19674</td></tr><tr><td>2017年</td><td>21521</td><td>1013</td><td>67.99</td><td>21034</td></tr><tr><td>2018年</td><td>22802</td><td>1091</td><td>76.62</td><td>22565</td></tr><tr><td>2019年</td><td>24206</td><td>1183</td><td>86.99</td><td>24013</td></tr><tr><td>2020年</td><td>23512</td><td>1287</td><td>96.35</td><td>23452</td></tr></tbody></table><p>问题：2012～2020年间，全国城市生活垃圾无害化处理量同比增长超过1200万吨的年份有几个：</p><p>A．4                 B．5</p><p>C．6                 D．7</p><h2 id="13-乘法技巧小分互换法-拆分法-放缩法"><a class="markdownIt-Anchor" href="#13-乘法技巧小分互换法-拆分法-放缩法"></a> 1.3　乘法技巧–小分互换法、拆分法、放缩法</h2><p><strong>1.3.1</strong>　<strong>小分互换</strong></p><p>若乘法中有某个乘数可以近似的转化为某个常见分数，我们可以将多位数乘法转化为简单除法计算;</p><p>一个数字乘以5、25、125，可转化为除2、4、8.</p><p><strong>需记忆的常用小数如下：</strong></p><p><img src="image-20250905140708548.png" alt="image-20250905140708548" /></p><p><strong>【例题】</strong></p><p>784×25%          632×12.5%                20%×455</p><p>727×16.7%         981×33.3%                50%×472</p><p><strong>1.3.2</strong>　<strong>乘法拆分</strong></p><p>若乘法中有某个乘数为百分数且能拆成两个简单数值（50%、10%、5%等），我们可以将该百分数拆成两部分相乘，要擅用“1%”（“一个包子”）。</p><p><strong>常用的小数拆分如下：</strong></p><p>45%＝50%－5%55%＝50%＋5% 15%＝10%＋5%</p><p>60%＝50%＋10% 95%＝1－5% 90%＝1－10%</p><p>及所有50%、100%附近的数等。</p><p><strong>【例题】</strong></p><p>382×55%          492×48%                936×45%</p><p>592×97%          1228×95%                766×103%</p><p><strong>【例1】</strong></p><p>62851×97.2%＝？</p><p>A．60671               B．61091</p><p>C．61692               D．62052</p><p><strong>【例2】</strong></p><p>42815×93.1%＝？</p><p>A．41481               B．40819</p><p>C．39861               D．39012</p><p><strong>【例3】（2023年青海）</strong></p><p><img src="image-20250905140812804.png" alt="image-20250905140812804" /></p><p><strong>图1　中国母婴商品消费规模（单位：亿元）</strong></p><p><img src="image-20250905140834424.png" alt="image-20250905140834424" /></p><p>问题：2021年，我国消费最多的母婴商品金额约为：</p><p>A．9638亿元              B．8994亿元</p><p>C．7852亿元              D．4186亿元</p><p><strong>1.3.3</strong>　<strong>乘法放缩</strong></p><p>若乘法中有某个乘数可以拆分为整百×（1<img src="clip_image002.gif" alt="img" />）时，可使用乘法结果放缩简化运算。</p><p><strong>【例题】</strong></p><p>212×332          315×571           428×325</p><p>782×617           865×408           568×330</p><h2 id="14-除法技巧拆分法-放缩法"><a class="markdownIt-Anchor" href="#14-除法技巧拆分法-放缩法"></a> 1.4　除法技巧–拆分法、放缩法</h2><p><strong>1.4.1</strong>　<strong>拆分法</strong></p><p>拆分法是对直除的“优化”，可借助选项“猜”出答案，<strong>尤其适合分子位数小于等于分母的除法计算</strong>。</p><p><strong>拆分法具体应用：</strong></p><p>一、如果分子在分母的50%附近，先拆出50%；</p><p>二、如果分数大小约等于1（分子分母相差不大），可先拆出100%；</p><p>三、如果分子很小，可根据实际情况拆出10%或5%或1%；</p><p><strong>【例1】50%左右</strong></p><p>250÷484          333÷642                488÷912</p><p>143÷247          200÷384                121÷292</p><p><strong>【例2】100%左右</strong></p><p>450÷484          633÷642                888÷912</p><p>252÷247          360÷344                261÷292</p><p><strong>【例3】1%-20%左右</strong></p><p>50÷484          33÷642                88÷912</p><p>36÷242          30÷384                41÷292</p><p><strong>【例4】实战演练</strong></p><p>47598÷89894＝？</p><p>A．54.9%             B．56.5%</p><p>C．52.9%             D．51.2%</p><p>43256÷357951＝？</p><p>A．8.5%              B．10.9%</p><p>C．12.1%             D．13.6%</p><p>32503÷33546＝？</p><p>A．94.1%             B．95.5%</p><p>C．96.9%             D．98.5%</p><p><strong>1.4.2</strong>　<strong>除法放缩</strong></p><p>除法放缩的原理：分子分母同时扩大或缩小相同的幅度，分式不变。</p><p>除法放缩的适用范围：</p><p>①分母接近整百；</p><p>②多个数乘除中分子分母接近整数倍。</p><p><strong>【例1】</strong></p><p>$$\frac{858}{981}$$</p><p><img src="image-20250905143626366.png" alt="image-20250905143626366" /></p><p><img src="image-20250905143639900.png" alt="image-20250905143639900" /></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;第一章-实用速算技巧&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#第一章-实用速算技巧&quot;&gt;&lt;/a&gt; 第一章　实用速算技巧&lt;/h1&gt;
&lt;h2 id=&quot;11-加法技巧尾数法-高位叠加法&quot;&gt;&lt;a</summary>
        
      
    
    
    
    <category term="公考" scheme="http://example.com/categories/%E5%85%AC%E8%80%83/"/>
    
    
    <category term="资料" scheme="http://example.com/tags/%E8%B5%84%E6%96%99/"/>
    
  </entry>
  
  <entry>
    <title>测试文档1</title>
    <link href="http://example.com/2025/01/24/%E6%B5%8B%E8%AF%95%E6%96%87%E6%A1%A31/"/>
    <id>http://example.com/2025/01/24/%E6%B5%8B%E8%AF%95%E6%96%87%E6%A1%A31/</id>
    <published>2025-01-24T09:49:32.000Z</published>
    <updated>2025-09-05T08:34:35.696Z</updated>
    
    <content type="html"><![CDATA[<p>测试文档1</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;测试文档1&lt;/p&gt;
</summary>
        
      
    
    
    
    <category term="深夜随笔" scheme="http://example.com/categories/%E6%B7%B1%E5%A4%9C%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="言语" scheme="http://example.com/tags/%E8%A8%80%E8%AF%AD/"/>
    
    <category term="推理" scheme="http://example.com/tags/%E6%8E%A8%E7%90%86/"/>
    
    <category term="资料" scheme="http://example.com/tags/%E8%B5%84%E6%96%99/"/>
    
    <category term="常识" scheme="http://example.com/tags/%E5%B8%B8%E8%AF%86/"/>
    
    <category term="政治" scheme="http://example.com/tags/%E6%94%BF%E6%B2%BB/"/>
    
    <category term="数量" scheme="http://example.com/tags/%E6%95%B0%E9%87%8F/"/>
    
    <category term="申论" scheme="http://example.com/tags/%E7%94%B3%E8%AE%BA/"/>
    
    <category term="claude" scheme="http://example.com/tags/claude/"/>
    
    <category term="java" scheme="http://example.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Claude Code官网教程</title>
    <link href="http://example.com/2025/01/24/Claude%20Code%E5%AE%98%E7%BD%91%E6%95%99%E7%A8%8B/"/>
    <id>http://example.com/2025/01/24/Claude%20Code%E5%AE%98%E7%BD%91%E6%95%99%E7%A8%8B/</id>
    <published>2025-01-24T09:49:32.000Z</published>
    <updated>2025-09-05T06:25:37.145Z</updated>
    
    <content type="html"><![CDATA[<h1 id="claude-code官网教程"><a class="markdownIt-Anchor" href="#claude-code官网教程"></a> Claude Code官网教程</h1><h1 id="claude-code-概述"><a class="markdownIt-Anchor" href="#claude-code-概述"></a> Claude Code 概述</h1><p>了解 Claude Code，Anthropic 的智能编程工具，它在您的终端中运行，帮助您比以往任何时候都更快地将想法转化为代码。</p><h2 id="30-秒快速开始"><a class="markdownIt-Anchor" href="#30-秒快速开始"></a> 30 秒快速开始</h2><p>前提条件：<a href="https://nodejs.org/en/download/"><strong>Node.js 18 或更新版本</strong></a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装 Claude Code</span></span><br><span class="line">npm install -g @anthropic-ai/claude-code</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">导航到您的项目</span></span><br><span class="line">cd your-awesome-project</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">开始使用 Claude 编程</span></span><br><span class="line">claude</span><br></pre></td></tr></table></figure><h2 id="claude-code-为您做什么"><a class="markdownIt-Anchor" href="#claude-code-为您做什么"></a> Claude Code 为您做什么</h2><ul><li><p>从描述构建功能：用简单的英语告诉 Claude 您想要构建什么。它会制定计划、编写代码并确保其正常工作。</p></li><li><p>调试和修复问题：描述一个错误或粘贴错误消息。Claude Code 将分析您的代码库，识别问题并实施修复。</p></li><li><p>导航任何代码库：询问有关您团队代码库的任何问题，并获得深思熟虑的答案。Claude Code 保持对您整个项目结构的感知，可以从网络上找到最新信息，并且通过 MCP 可以从 Google Drive、Figma 和 Slack 等外部数据源获取信息。</p></li><li><p>自动化繁琐任务：修复复杂的 lint 问题、解决合并冲突并编写发布说明。在您的开发机器上通过单个命令完成所有这些，或在 CI 中自动完成。</p></li></ul><h2 id="为什么开发者喜爱-claude-code"><a class="markdownIt-Anchor" href="#为什么开发者喜爱-claude-code"></a> 为什么开发者喜爱 Claude Code</h2><ul><li><p>在您的终端中工作：不是另一个聊天窗口。不是另一个 IDE。Claude Code 在您已经工作的地方与您相遇，使用您已经喜爱的工具。</p></li><li><p>采取行动：Claude Code 可以直接编辑文件、运行命令并创建提交。需要更多功能？MCP 让 Claude 读取您在 Google Drive 中的设计文档、更新您在 Jira 中的工单，或使用_您的_自定义开发工具。</p></li><li><p>Unix 哲学：Claude Code 是可组合和可脚本化的。tail -f app.log | claude -p “如果您在此日志流中看到任何异常，请通过 Slack 通知我” 有效。您的 CI 可以运行 claude -p “如果有新的文本字符串，将它们翻译成法语并为 @lang-fr-team 提出 PR 进行审查”。</p></li><li><p>企业就绪：使用 Anthropic 的 API，或在 AWS 或 GCP 上托管。企业级安全性、隐私和合规性是内置的。</p></li></ul><h1 id="快速开始"><a class="markdownIt-Anchor" href="#快速开始"></a> 快速开始</h1><p>欢迎使用 Claude Code！</p><p>这个快速开始指南将让您在几分钟内使用AI驱动的编程辅助。完成后，您将了解如何使用 Claude Code 进行常见的开发任务。</p><h2 id="开始之前"><a class="markdownIt-Anchor" href="#开始之前"></a> 开始之前</h2><p>确保您已经：</p><ul><li><p><a href="https://docs.anthropic.com/zh-CN/docs/claude-code/setup"><strong>安装了 Claude Code</strong></a></p></li><li><p>打开了终端或命令提示符</p></li><li><p>有一个代码项目可以使用</p></li></ul><h2 id="步骤-1开始您的第一个会话"><a class="markdownIt-Anchor" href="#步骤-1开始您的第一个会话"></a> 步骤 1：开始您的第一个会话</h2><p>在任何项目目录中打开终端并启动 Claude Code：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /path/to/your/project</span><br><span class="line">claude</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>您将在新的交互式会话中看到 Claude Code 提示符：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">✻ Welcome to Claude Code!</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">&gt; Try &quot;create a util logging.py that...&quot; </span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="步骤-2提出您的第一个问题"><a class="markdownIt-Anchor" href="#步骤-2提出您的第一个问题"></a> 步骤 2：提出您的第一个问题</h2><p>让我们从了解您的代码库开始。尝试以下命令之一：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; what does this project do?</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Claude 将分析您的文件并提供摘要。您也可以提出更具体的问题：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; what technologies does this project use?</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; where is the main entry point?</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; explain the folder structure</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Claude Code 会根据需要读取您的文件 - 您不必手动添加上下文。</p><h2 id="步骤-3进行您的第一次代码更改"><a class="markdownIt-Anchor" href="#步骤-3进行您的第一次代码更改"></a> 步骤 3：进行您的第一次代码更改</h2><p>现在让我们让 Claude Code 做一些实际的编程工作。尝试一个简单的任务：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; add a hello world function to the main file</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Claude Code 将：</p><ol><li><p>找到合适的文件</p></li><li><p>向您展示建议的更改</p></li><li><p>请求您的批准</p></li><li><p>进行编辑</p></li></ol><p>Claude Code 在修改文件之前总是请求许可。您可以批准单个更改或为会话启用”全部接受”模式。</p><h2 id="步骤-4将-git-与-claude-code-一起使用"><a class="markdownIt-Anchor" href="#步骤-4将-git-与-claude-code-一起使用"></a> 步骤 4：将 Git 与 Claude Code 一起使用</h2><p>Claude Code 使 Git 操作变得对话化：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; what files have I changed?</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; commit my changes with a descriptive message</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>您也可以提示更复杂的 Git 操作：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; create a new branch called feature/quickstart</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; show me the last 5 commits</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; help me resolve merge conflicts</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="步骤-5修复错误或添加功能"><a class="markdownIt-Anchor" href="#步骤-5修复错误或添加功能"></a> 步骤 5：修复错误或添加功能</h2><p>Claude 擅长调试和功能实现。</p><p>用自然语言描述您想要的：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; add input validation to the user registration form</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>或修复现有问题：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; there&#x27;s a bug where users can submit empty forms - fix it</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Claude Code 将：</p><ul><li><p>定位相关代码</p></li><li><p>理解上下文</p></li><li><p>实现解决方案</p></li><li><p>如果可用，运行测试</p></li></ul><h2 id="步骤-6测试其他常见工作流程"><a class="markdownIt-Anchor" href="#步骤-6测试其他常见工作流程"></a> 步骤 6：测试其他常见工作流程</h2><p>有多种方式与 Claude 协作：</p><p><strong>重构代码</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; refactor the authentication module to use async/await instead of callbacks</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>编写测试</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; write unit tests for the calculator functions</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>更新文档</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; update the README with installation instructions</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>代码审查</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; review my changes and suggest improvements</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>记住</strong>：Claude Code 是您的AI结对编程伙伴。像与有用的同事交谈一样与它交谈 - 描述您想要实现的目标，它将帮助您达到目标。</p><h2 id="基本命令"><a class="markdownIt-Anchor" href="#基本命令"></a> 基本命令</h2><p>以下是日常使用最重要的命令：</p><table><thead><tr><th><strong>命令</strong></th><th><strong>功能</strong></th><th><strong>示例</strong></th></tr></thead><tbody><tr><td><code>claude</code></td><td>启动交互模式</td><td><code>claude</code></td></tr><tr><td><code>claude &quot;task&quot;</code></td><td>运行一次性任务</td><td><code>claude &quot;fix the build error&quot;</code></td></tr><tr><td><code>claude -p &quot;query&quot;</code></td><td>运行一次性查询，然后退出</td><td><code>claude -p &quot;explain this function&quot;</code></td></tr><tr><td><code>claude -c</code></td><td>继续最近的对话</td><td><code>claude -c</code></td></tr><tr><td><code>claude -r</code></td><td>恢复之前的对话</td><td><code>claude -r</code></td></tr><tr><td><code>claude commit</code></td><td>创建 Git 提交</td><td><code>claude commit</code></td></tr><tr><td><code>/clear</code></td><td>清除对话历史</td><td><code>&gt; /clear</code></td></tr><tr><td><code>/help</code></td><td>显示可用命令</td><td><code>&gt; /help</code></td></tr><tr><td><code>exit</code> 或 Ctrl+C</td><td>退出 Claude Code</td><td><code>&gt; exit</code></td></tr></tbody></table><h1 id="使用-claude-code-构建"><a class="markdownIt-Anchor" href="#使用-claude-code-构建"></a> 使用 CLAUDE CODE 构建</h1><h1 id="claude-code-sdk"><a class="markdownIt-Anchor" href="#claude-code-sdk"></a> Claude Code SDK</h1><p>了解如何使用 Claude Code SDK 以编程方式将 Claude Code 集成到您的应用程序中。</p><p>Claude Code SDK 支持将 Claude Code 作为子进程运行，提供了一种构建 AI 驱动的编码助手和工具的方法，利用 Claude 的能力。</p><p>SDK 可用于命令行、TypeScript 和 Python 使用。</p><h2 id="身份验证"><a class="markdownIt-Anchor" href="#身份验证"></a> 身份验证</h2><p>要使用 Claude Code SDK，我们建议创建一个专用的 API 密钥：</p><ol><li><p>在 <a href="https://console.anthropic.com/"><strong>Anthropic Console</strong></a> 中创建一个 Anthropic API 密钥</p></li><li><p>然后，设置 <code>ANTHROPIC_API_KEY</code> 环境变量。我们建议安全地存储此密钥（例如，使用 Github <a href="https://docs.github.com/en/actions/security-for-github-actions/security-guides/using-secrets-in-github-actions"><strong>secret</strong></a>）</p></li></ol><h2 id="基本-sdk-使用"><a class="markdownIt-Anchor" href="#基本-sdk-使用"></a> 基本 SDK 使用</h2><p>Claude Code SDK 允许您在应用程序中以非交互模式使用 Claude Code。</p><h3 id="命令行"><a class="markdownIt-Anchor" href="#命令行"></a> 命令行</h3><p>以下是命令行 SDK 的一些基本示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 运行单个提示并退出（打印模式）</span></span><br><span class="line">$ claude -p <span class="string">&quot;Write a function to calculate Fibonacci numbers&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用管道提供 stdin</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;Explain this code&quot;</span> | claude -p</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以 JSON 格式输出并包含元数据</span></span><br><span class="line">$ claude -p <span class="string">&quot;Generate a hello world function&quot;</span> --output-format json</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在到达时流式传输 JSON 输出</span></span><br><span class="line">$ claude -p <span class="string">&quot;Build a React component&quot;</span> --output-format stream-json</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="typescript"><a class="markdownIt-Anchor" href="#typescript"></a> TypeScript</h3><p>TypeScript SDK 包含在 NPM 上的主要 <a href="https://www.npmjs.com/package/@anthropic-ai/claude-code"><code>**@anthropic-ai/claude-code**</code></a> 包中：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; query, <span class="keyword">type</span> <span class="title class_">SDKMessage</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@anthropic-ai/claude-code&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="attr">messages</span>: <span class="title class_">SDKMessage</span>[] = [];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="title function_">await</span> (<span class="keyword">const</span> message <span class="keyword">of</span> <span class="title function_">query</span>(&#123;</span><br><span class="line">  <span class="attr">prompt</span>: <span class="string">&quot;Write a haiku about foo.py&quot;</span>,</span><br><span class="line">  <span class="attr">abortController</span>: <span class="keyword">new</span> <span class="title class_">AbortController</span>(),</span><br><span class="line">  <span class="attr">options</span>: &#123;</span><br><span class="line">    <span class="attr">maxTurns</span>: <span class="number">3</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;)) &#123;</span><br><span class="line">  messages.<span class="title function_">push</span>(message);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(messages);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>TypeScript SDK 接受命令行 SDK 支持的所有参数，以及：</p><table><thead><tr><th><strong>参数</strong></th><th><strong>描述</strong></th><th><strong>默认值</strong></th></tr></thead><tbody><tr><td><code>abortController</code></td><td>中止控制器</td><td><code>new AbortController()</code></td></tr><tr><td><code>cwd</code></td><td>当前工作目录</td><td><code>process.cwd()</code></td></tr><tr><td><code>executable</code></td><td>要使用的 JavaScript 运行时</td><td>在 Node.js 中运行时为 <code>node</code>，在 Bun 中运行时为 <code>bun</code></td></tr><tr><td><code>executableArgs</code></td><td>传递给可执行文件的参数</td><td><code>[]</code></td></tr><tr><td><code>pathToClaudeCodeExecutable</code></td><td>Claude Code 可执行文件的路径</td><td>与 <code>@anthropic-ai/claude-code</code> 一起提供的可执行文件</td></tr></tbody></table><h3 id="python"><a class="markdownIt-Anchor" href="#python"></a> Python</h3><p>Python SDK 在 PyPI 上作为 <a href="https://github.com/anthropics/claude-code-sdk-python"><code>**claude-code-sdk**</code></a> 提供：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install claude-code-sdk</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>先决条件：</strong></p><ul><li><p>Python 3.10+</p></li><li><p>Node.js</p></li><li><p>Claude Code CLI：<code>npm install -g @anthropic-ai/claude-code</code></p></li></ul><p>基本使用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> anyio</span><br><span class="line"><span class="keyword">from</span> claude_code_sdk <span class="keyword">import</span> query, ClaudeCodeOptions, Message</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    messages: <span class="built_in">list</span>[Message] = []</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">for</span> message <span class="keyword">in</span> query(</span><br><span class="line">        prompt=<span class="string">&quot;Write a haiku about foo.py&quot;</span>,</span><br><span class="line">        options=ClaudeCodeOptions(max_turns=<span class="number">3</span>)</span><br><span class="line">    ):</span><br><span class="line">        messages.append(message)</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">print</span>(messages)</span><br><span class="line"></span><br><span class="line">anyio.run(main)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Python SDK 通过 <code>ClaudeCodeOptions</code> 类接受命令行 SDK 支持的所有参数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> claude_code_sdk <span class="keyword">import</span> query, ClaudeCodeOptions</span><br><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line"></span><br><span class="line">options = ClaudeCodeOptions(</span><br><span class="line">    max_turns=<span class="number">3</span>,</span><br><span class="line">    system_prompt=<span class="string">&quot;You are a helpful assistant&quot;</span>,</span><br><span class="line">    cwd=Path(<span class="string">&quot;/path/to/project&quot;</span>),  <span class="comment"># 可以是字符串或 Path</span></span><br><span class="line">    allowed_tools=[<span class="string">&quot;Read&quot;</span>, <span class="string">&quot;Write&quot;</span>, <span class="string">&quot;Bash&quot;</span>],</span><br><span class="line">    permission_mode=<span class="string">&quot;acceptEdits&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">for</span> message <span class="keyword">in</span> query(prompt=<span class="string">&quot;Hello&quot;</span>, options=options):</span><br><span class="line">    <span class="built_in">print</span>(message)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="高级使用"><a class="markdownIt-Anchor" href="#高级使用"></a> 高级使用</h2><p>下面的文档使用命令行 SDK 作为示例，但也可以与 TypeScript 和 Python SDK 一起使用。</p><h3 id="多轮对话"><a class="markdownIt-Anchor" href="#多轮对话"></a> 多轮对话</h3><p>对于多轮对话，您可以恢复对话或从最近的会话继续：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 继续最近的对话</span></span><br><span class="line">$ claude --<span class="built_in">continue</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 继续并提供新的提示</span></span><br><span class="line">$ claude --<span class="built_in">continue</span> <span class="string">&quot;Now refactor this for better performance&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过会话 ID 恢复特定对话</span></span><br><span class="line">$ claude --resume 550e8400-e29b-41d4-a716-446655440000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在打印模式下恢复（非交互式）</span></span><br><span class="line">$ claude -p --resume 550e8400-e29b-41d4-a716-446655440000 <span class="string">&quot;Update the tests&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在打印模式下继续（非交互式）</span></span><br><span class="line">$ claude -p --<span class="built_in">continue</span> <span class="string">&quot;Add error handling&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="自定义系统提示"><a class="markdownIt-Anchor" href="#自定义系统提示"></a> 自定义系统提示</h3><p>您可以提供自定义系统提示来指导 Claude 的行为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 覆盖系统提示（仅适用于 --print）</span></span><br><span class="line">$ claude -p <span class="string">&quot;Build a REST API&quot;</span> --system-prompt <span class="string">&quot;You are a senior backend engineer. Focus on security, performance, and maintainability.&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 具有特定要求的系统提示</span></span><br><span class="line">$ claude -p <span class="string">&quot;Create a database schema&quot;</span> --system-prompt <span class="string">&quot;You are a database architect. Use PostgreSQL best practices and include proper indexing.&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>您还可以将指令附加到默认系统提示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 附加系统提示（仅适用于 --print）</span></span><br><span class="line">$ claude -p <span class="string">&quot;Build a REST API&quot;</span> --append-system-prompt <span class="string">&quot;After writing code, be sure to code review yourself.&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="mcp-配置"><a class="markdownIt-Anchor" href="#mcp-配置"></a> MCP 配置</h3><p>模型上下文协议（MCP）允许您使用来自外部服务器的附加工具和资源扩展 Claude Code。使用 <code>--mcp-config</code> 标志，您可以加载提供专门功能的 MCP 服务器，如数据库访问、API 集成或自定义工具。</p><p>创建一个包含您的 MCP 服务器的 JSON 配置文件：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;mcpServers&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;filesystem&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;npx&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;-y&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;@modelcontextprotocol/server-filesystem&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;/path/to/allowed/files&quot;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;github&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;npx&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;-y&quot;</span><span class="punctuation">,</span> <span class="string">&quot;@modelcontextprotocol/server-github&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;env&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;GITHUB_TOKEN&quot;</span><span class="punctuation">:</span> <span class="string">&quot;your-github-token&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后与 Claude Code 一起使用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从配置加载 MCP 服务器</span></span><br><span class="line">$ claude -p <span class="string">&quot;List all files in the project&quot;</span> --mcp-config mcp-servers.json</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重要：必须使用 --allowedTools 明确允许 MCP 工具</span></span><br><span class="line"><span class="comment"># MCP 工具遵循格式：mcp__$serverName__$toolName</span></span><br><span class="line">$ claude -p <span class="string">&quot;Search for TODO comments&quot;</span> \</span><br><span class="line">  --mcp-config mcp-servers.json \</span><br><span class="line">  --allowedTools <span class="string">&quot;mcp__filesystem__read_file,mcp__filesystem__list_directory&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 MCP 工具在非交互模式下处理权限提示</span></span><br><span class="line">$ claude -p <span class="string">&quot;Deploy the application&quot;</span> \</span><br><span class="line">  --mcp-config mcp-servers.json \</span><br><span class="line">  --allowedTools <span class="string">&quot;mcp__permissions__approve&quot;</span> \</span><br><span class="line">  --permission-prompt-tool mcp__permissions__approve</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>使用 MCP 工具时，您必须使用 <code>--allowedTools</code> 标志明确允许它们。MCP 工具名称遵循模式 <code>mcp__&lt;serverName&gt;__&lt;toolName&gt;</code>，其中：</p><ul><li><p><code>serverName</code> 是您的 MCP 配置文件中的键</p></li><li><p><code>toolName</code> 是该服务器提供的特定工具</p></li></ul><p>这种安全措施确保 MCP 工具仅在明确允许时使用。</p><p>如果您只指定服务器名称（即 <code>mcp__&lt;serverName&gt;</code>），则该服务器的所有工具都将被允许。</p><p>不支持通配符模式（例如 <code>mcp__go*</code>）。</p><h3 id="自定义权限提示工具"><a class="markdownIt-Anchor" href="#自定义权限提示工具"></a> 自定义权限提示工具</h3><p>可选地，使用 <code>--permission-prompt-tool</code> 传入一个 MCP 工具，我们将使用它来检查用户是否授予模型调用给定工具的权限。当模型调用工具时，会发生以下情况：</p><ol><li><p>我们首先检查权限设置：所有 <a href="https://docs.anthropic.com/zh-CN/docs/claude-code/settings"><strong>settings.json 文件</strong></a>，以及传递给 SDK 的 <code>--allowedTools</code> 和 <code>--disallowedTools</code>；如果其中之一允许或拒绝工具调用，我们继续进行工具调用</p></li><li><p>否则，我们调用您在 <code>--permission-prompt-tool</code> 中提供的 MCP 工具</p></li></ol><p><code>--permission-prompt-tool</code> MCP 工具会传递工具名称和输入，并且必须返回一个带有结果的 JSON 字符串化载荷。载荷必须是以下之一：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 工具调用被允许</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;behavior&quot;</span>: <span class="string">&quot;allow&quot;</span>,</span><br><span class="line">  <span class="string">&quot;updatedInput&quot;</span>: &#123;...&#125;, <span class="comment">// 更新的输入，或者只是返回原始输入</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 工具调用被拒绝</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;behavior&quot;</span>: <span class="string">&quot;deny&quot;</span>,</span><br><span class="line">  <span class="string">&quot;message&quot;</span>: <span class="string">&quot;...&quot;</span> <span class="comment">// 解释为什么权限被拒绝的人类可读字符串</span></span><br><span class="line">&#125;zai1</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>例如，TypeScript MCP 权限提示工具实现可能如下所示：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> server = <span class="keyword">new</span> <span class="title class_">McpServer</span>(&#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;Test permission prompt MCP Server&quot;</span>,</span><br><span class="line">  <span class="attr">version</span>: <span class="string">&quot;0.0.1&quot;</span>,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">server.<span class="title function_">tool</span>(</span><br><span class="line">  <span class="string">&quot;approval_prompt&quot;</span>,</span><br><span class="line">  <span class="string">&#x27;Simulate a permission check - approve if the input contains &quot;allow&quot;, otherwise deny&#x27;</span>,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">tool_name</span>: z.<span class="title function_">string</span>().<span class="title function_">describe</span>(<span class="string">&quot;The tool requesting permission&quot;</span>),</span><br><span class="line">    <span class="attr">input</span>: z.<span class="title function_">object</span>(&#123;&#125;).<span class="title function_">passthrough</span>().<span class="title function_">describe</span>(<span class="string">&quot;The input for the tool&quot;</span>),</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">async</span> (&#123; tool_name, input &#125;) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">content</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">type</span>: <span class="string">&quot;text&quot;</span>,</span><br><span class="line">          <span class="attr">text</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(</span><br><span class="line">            <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(input).<span class="title function_">includes</span>(<span class="string">&quot;allow&quot;</span>)</span><br><span class="line">              ? &#123;</span><br><span class="line">                  <span class="attr">behavior</span>: <span class="string">&quot;allow&quot;</span>,</span><br><span class="line">                  <span class="attr">updatedInput</span>: input,</span><br><span class="line">                &#125;</span><br><span class="line">              : &#123;</span><br><span class="line">                  <span class="attr">behavior</span>: <span class="string">&quot;deny&quot;</span>,</span><br><span class="line">                  <span class="attr">message</span>: <span class="string">&quot;Permission denied by test approval_prompt tool&quot;</span>,</span><br><span class="line">                &#125;</span><br><span class="line">          ),</span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>要使用此工具，添加您的 MCP 服务器（例如使用 <code>--mcp-config</code>），然后像这样调用 SDK：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">claude -p <span class="string">&quot;...&quot;</span> \</span><br><span class="line">  --permission-prompt-tool mcp__test-server__approval_prompt \</span><br><span class="line">  --mcp-config my-config.json</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>使用说明：</p><ul><li><p>使用 <code>updatedInput</code> 告诉模型权限提示改变了其输入；否则，将 <code>updatedInput</code> 设置为原始输入，如上面的示例所示。例如，如果工具向用户显示文件编辑差异并让他们手动编辑差异，权限提示工具应该返回该更新的编辑。</p></li><li><p>载荷必须是 JSON 字符串化的</p></li></ul><h2 id="可用的-cli-选项"><a class="markdownIt-Anchor" href="#可用的-cli-选项"></a> 可用的 CLI 选项</h2><p>SDK 利用 Claude Code 中可用的所有 CLI 选项。以下是 SDK 使用的关键选项：</p><table><thead><tr><th><strong>标志</strong></th><th><strong>描述</strong></th><th><strong>示例</strong></th></tr></thead><tbody><tr><td><code>--print</code>, <code>-p</code></td><td>在非交互模式下运行</td><td><code>claude -p &quot;query&quot;</code></td></tr><tr><td><code>--output-format</code></td><td>指定输出格式（<code>text</code>、<code>json</code>、<code>stream-json</code>）</td><td><code>claude -p --output-format json</code></td></tr><tr><td><code>--resume</code>, <code>-r</code></td><td>通过会话 ID 恢复对话</td><td><code>claude --resume abc123</code></td></tr><tr><td><code>--continue</code>, <code>-c</code></td><td>继续最近的对话</td><td><code>claude --continue</code></td></tr><tr><td><code>--verbose</code></td><td>启用详细日志记录</td><td><code>claude --verbose</code></td></tr><tr><td><code>--max-turns</code></td><td>在非交互模式下限制代理轮次</td><td><code>claude --max-turns 3</code></td></tr><tr><td><code>--system-prompt</code></td><td>覆盖系统提示（仅适用于 <code>--print</code>）</td><td><code>claude --system-prompt &quot;Custom instruction&quot;</code></td></tr><tr><td><code>--append-system-prompt</code></td><td>附加到系统提示（仅适用于 <code>--print</code>）</td><td><code>claude --append-system-prompt &quot;Custom instruction&quot;</code></td></tr><tr><td><code>--allowedTools</code></td><td>允许的工具的空格分隔列表，或<br>允许的工具的逗号分隔列表字符串</td><td><code>claude --allowedTools mcp__slack mcp__filesystem</code><br><code>claude --allowedTools &quot;Bash(npm install),mcp__filesystem&quot;</code></td></tr><tr><td><code>--disallowedTools</code></td><td>拒绝的工具的空格分隔列表，或<br>拒绝的工具的逗号分隔列表字符串</td><td><code>claude --disallowedTools mcp__splunk mcp__github</code><br><code>claude --disallowedTools &quot;Bash(git commit),mcp__github&quot;</code></td></tr><tr><td><code>--mcp-config</code></td><td>从 JSON 文件加载 MCP 服务器</td><td><code>claude --mcp-config servers.json</code></td></tr><tr><td><code>--permission-prompt-tool</code></td><td>用于处理权限提示的 MCP 工具（仅适用于 <code>--print</code>）</td><td><code>claude --permission-prompt-tool mcp__auth__prompt</code></td></tr></tbody></table><p>有关 CLI 选项和功能的完整列表，请参阅 <a href="https://docs.anthropic.com/zh-CN/docs/claude-code/cli-reference"><strong>CLI 参考</strong></a> 文档。</p><h2 id="输出格式"><a class="markdownIt-Anchor" href="#输出格式"></a> 输出格式</h2><p>SDK 支持多种输出格式：</p><h3 id="文本输出默认"><a class="markdownIt-Anchor" href="#文本输出默认"></a> 文本输出（默认）</h3><p>仅返回响应文本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ claude -p <span class="string">&quot;Explain file src/components/Header.tsx&quot;</span></span><br><span class="line"><span class="comment"># 输出：This is a React component showing...</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="json-输出"><a class="markdownIt-Anchor" href="#json-输出"></a> JSON 输出</h3><p>返回包括元数据的结构化数据：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ claude -p <span class="string">&quot;How does the data layer work?&quot;</span> --output-format json</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>响应格式：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;result&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;subtype&quot;</span><span class="punctuation">:</span> <span class="string">&quot;success&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;total_cost_usd&quot;</span><span class="punctuation">:</span> <span class="number">0.003</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;is_error&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;duration_ms&quot;</span><span class="punctuation">:</span> <span class="number">1234</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;duration_api_ms&quot;</span><span class="punctuation">:</span> <span class="number">800</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;num_turns&quot;</span><span class="punctuation">:</span> <span class="number">6</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="string">&quot;The response text here...&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;session_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;abc123&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="流式-json-输出"><a class="markdownIt-Anchor" href="#流式-json-输出"></a> 流式 JSON 输出</h3><p>在接收到每条消息时流式传输：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ claude -p <span class="string">&quot;Build an application&quot;</span> --output-format stream-json</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>每个对话都以初始的 <code>init</code> 系统消息开始，然后是用户和助手消息列表，最后是带有统计信息的最终 <code>result</code> 系统消息。每条消息都作为单独的 JSON 对象发出。</p><h2 id="消息模式"><a class="markdownIt-Anchor" href="#消息模式"></a> 消息模式</h2><p>从 JSON API 返回的消息根据以下模式严格类型化：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">SDKMessage</span> =</span><br><span class="line">  <span class="comment">// 助手消息</span></span><br><span class="line">  | &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&quot;assistant&quot;</span>;</span><br><span class="line">      <span class="attr">message</span>: <span class="title class_">Message</span>; <span class="comment">// 来自 Anthropic SDK</span></span><br><span class="line">      <span class="attr">session_id</span>: <span class="built_in">string</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 用户消息</span></span><br><span class="line">  | &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&quot;user&quot;</span>;</span><br><span class="line">      <span class="attr">message</span>: <span class="title class_">MessageParam</span>; <span class="comment">// 来自 Anthropic SDK</span></span><br><span class="line">      <span class="attr">session_id</span>: <span class="built_in">string</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 作为最后一条消息发出</span></span><br><span class="line">  | &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&quot;result&quot;</span>;</span><br><span class="line">      <span class="attr">subtype</span>: <span class="string">&quot;success&quot;</span>;</span><br><span class="line">      <span class="attr">duration_ms</span>: float;</span><br><span class="line">      <span class="attr">duration_api_ms</span>: float;</span><br><span class="line">      <span class="attr">is_error</span>: <span class="built_in">boolean</span>;</span><br><span class="line">      <span class="attr">num_turns</span>: int;</span><br><span class="line">      <span class="attr">result</span>: <span class="built_in">string</span>;</span><br><span class="line">      <span class="attr">session_id</span>: <span class="built_in">string</span>;</span><br><span class="line">      <span class="attr">total_cost_usd</span>: float;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 作为最后一条消息发出，当我们达到最大轮次时</span></span><br><span class="line">  | &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&quot;result&quot;</span>;</span><br><span class="line">      <span class="attr">subtype</span>: <span class="string">&quot;error_max_turns&quot;</span> | <span class="string">&quot;error_during_execution&quot;</span>;</span><br><span class="line">      <span class="attr">duration_ms</span>: float;</span><br><span class="line">      <span class="attr">duration_api_ms</span>: float;</span><br><span class="line">      <span class="attr">is_error</span>: <span class="built_in">boolean</span>;</span><br><span class="line">      <span class="attr">num_turns</span>: int;</span><br><span class="line">      <span class="attr">session_id</span>: <span class="built_in">string</span>;</span><br><span class="line">      <span class="attr">total_cost_usd</span>: float;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 在对话开始时作为第一条消息发出</span></span><br><span class="line">  | &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&quot;system&quot;</span>;</span><br><span class="line">      <span class="attr">subtype</span>: <span class="string">&quot;init&quot;</span>;</span><br><span class="line">      <span class="attr">apiKeySource</span>: <span class="built_in">string</span>;</span><br><span class="line">      <span class="attr">cwd</span>: <span class="built_in">string</span>;</span><br><span class="line">      <span class="attr">session_id</span>: <span class="built_in">string</span>;</span><br><span class="line">      <span class="attr">tools</span>: <span class="built_in">string</span>[];</span><br><span class="line">      <span class="attr">mcp_servers</span>: &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">        <span class="attr">status</span>: <span class="built_in">string</span>;</span><br><span class="line">      &#125;[];</span><br><span class="line">      <span class="attr">model</span>: <span class="built_in">string</span>;</span><br><span class="line">      <span class="attr">permissionMode</span>: <span class="string">&quot;default&quot;</span> | <span class="string">&quot;acceptEdits&quot;</span> | <span class="string">&quot;bypassPermissions&quot;</span> | <span class="string">&quot;plan&quot;</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>我们将很快以 JSONSchema 兼容格式发布这些类型。我们对主要的 Claude Code 包使用语义版本控制来传达此格式的重大更改。</p><p><code>Message</code> 和 <code>MessageParam</code> 类型在 Anthropic SDK 中可用。例如，请参阅 Anthropic <a href="https://github.com/anthropics/anthropic-sdk-typescript"><strong>TypeScript</strong></a> 和 <a href="https://github.com/anthropics/anthropic-sdk-python/"><strong>Python</strong></a> SDK。</p><h2 id="输入格式"><a class="markdownIt-Anchor" href="#输入格式"></a> 输入格式</h2><p>SDK 支持多种输入格式：</p><h3 id="文本输入默认"><a class="markdownIt-Anchor" href="#文本输入默认"></a> 文本输入（默认）</h3><p>输入文本可以作为参数提供：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ claude -p <span class="string">&quot;Explain this code&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>或者输入文本可以通过 stdin 管道传输：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;Explain this code&quot;</span> | claude -p</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="流式-json-输入"><a class="markdownIt-Anchor" href="#流式-json-输入"></a> 流式 JSON 输入</h3><p>通过 <code>stdin</code> 提供的消息流，其中每条消息代表一个用户轮次。这允许对话的多个轮次而无需重新启动 <code>claude</code> 二进制文件，并允许在模型处理请求时向模型提供指导。</p><p>每条消息都是一个 JSON ‘用户消息’ 对象，遵循与输出消息模式相同的格式。消息使用 <a href="https://jsonlines.org/"><strong>jsonl</strong></a> 格式格式化，其中输入的每一行都是一个完整的 JSON 对象。流式 JSON 输入需要 <code>-p</code> 和 <code>--output-format stream-json</code>。</p><p>目前这仅限于纯文本用户消息。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">&#x27;&#123;&quot;type&quot;:&quot;user&quot;,&quot;message&quot;:&#123;&quot;role&quot;:&quot;user&quot;,&quot;content&quot;:[&#123;&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Explain this code&quot;&#125;]&#125;&#125;&#x27;</span> | claude -p --output-format=stream-json --input-format=stream-json --verbose</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="示例"><a class="markdownIt-Anchor" href="#示例"></a> 示例</h2><h3 id="简单脚本集成"><a class="markdownIt-Anchor" href="#简单脚本集成"></a> 简单脚本集成</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行 Claude 并检查退出代码的简单函数</span></span><br><span class="line"><span class="function"><span class="title">run_claude</span></span>() &#123;</span><br><span class="line">    <span class="built_in">local</span> prompt=<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    <span class="built_in">local</span> output_format=<span class="string">&quot;<span class="variable">$&#123;2:-text&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> claude -p <span class="string">&quot;<span class="variable">$prompt</span>&quot;</span> --output-format <span class="string">&quot;<span class="variable">$output_format</span>&quot;</span>; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Success!&quot;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Error: Claude failed with exit code $?&quot;</span> &gt;&amp;2</span><br><span class="line">        <span class="built_in">return</span> 1</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用示例</span></span><br><span class="line">run_claude <span class="string">&quot;Write a Python function to read CSV files&quot;</span></span><br><span class="line">run_claude <span class="string">&quot;Optimize this database query&quot;</span> <span class="string">&quot;json&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="使用-claude-处理文件"><a class="markdownIt-Anchor" href="#使用-claude-处理文件"></a> 使用 Claude 处理文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 通过 Claude 处理文件</span></span><br><span class="line">$ <span class="built_in">cat</span> mycode.py | claude -p <span class="string">&quot;Review this code for bugs&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 处理多个文件</span></span><br><span class="line">$ <span class="keyword">for</span> file <span class="keyword">in</span> *.js; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Processing <span class="variable">$file</span>...&quot;</span></span><br><span class="line">    claude -p <span class="string">&quot;Add JSDoc comments to this file:&quot;</span> &lt; <span class="string">&quot;<span class="variable">$file</span>&quot;</span> &gt; <span class="string">&quot;<span class="variable">$&#123;file&#125;</span>.documented&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在管道中使用 Claude</span></span><br><span class="line">$ grep -l <span class="string">&quot;TODO&quot;</span> *.py | <span class="keyword">while</span> <span class="built_in">read</span> file; <span class="keyword">do</span></span><br><span class="line">    claude -p <span class="string">&quot;Fix all TODO items in this file&quot;</span> &lt; <span class="string">&quot;<span class="variable">$file</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="会话管理"><a class="markdownIt-Anchor" href="#会话管理"></a> 会话管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动会话并捕获会话 ID</span></span><br><span class="line">$ claude -p <span class="string">&quot;Initialize a new project&quot;</span> --output-format json | jq -r <span class="string">&#x27;.session_id&#x27;</span> &gt; session.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用相同会话继续</span></span><br><span class="line">$ claude -p --resume <span class="string">&quot;<span class="subst">$(cat session.txt)</span>&quot;</span> <span class="string">&quot;Add unit tests&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="最佳实践"><a class="markdownIt-Anchor" href="#最佳实践"></a> 最佳实践</h2><ol><li><strong>使用 JSON 输出格式</strong> 进行响应的程序化解析：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 jq 解析 JSON 响应</span></span><br><span class="line">result=$(claude -p <span class="string">&quot;Generate code&quot;</span> --output-format json)</span><br><span class="line">code=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$result</span>&quot;</span> | jq -r <span class="string">&#x27;.result&#x27;</span>)</span><br><span class="line">cost=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$result</span>&quot;</span> | jq -r <span class="string">&#x27;.cost_usd&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li><strong>优雅地处理错误</strong> - 检查退出代码和 stderr：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ! claude -p <span class="string">&quot;<span class="variable">$prompt</span>&quot;</span> 2&gt;error.log; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Error occurred:&quot;</span> &gt;&amp;2</span><br><span class="line">    <span class="built_in">cat</span> error.log &gt;&amp;2</span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="3"><li><p><strong>使用会话管理</strong> 在多轮对话中维护上下文</p></li><li><p><strong>考虑超时</strong> 对于长时间运行的操作：</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">timeout</span> 300 claude -p <span class="string">&quot;<span class="variable">$complex_prompt</span>&quot;</span> || <span class="built_in">echo</span> <span class="string">&quot;Timed out after 5 minutes&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="5"><li><strong>尊重速率限制</strong> 在进行多个请求时通过在调用之间添加延迟</li></ol><h2 id="实际应用"><a class="markdownIt-Anchor" href="#实际应用"></a> 实际应用</h2><p>Claude Code SDK 能够与您的开发工作流程进行强大的集成。一个值得注意的例子是 <a href="https://docs.anthropic.com/zh-CN/docs/claude-code/github-actions"><strong>Claude Code GitHub Actions</strong></a>，它使用 SDK 直接在您的 GitHub 工作流程中提供自动化代码审查、PR 创建和问题分类功能。</p><h2 id="相关资源"><a class="markdownIt-Anchor" href="#相关资源"></a> 相关资源</h2><ul><li><p><a href="https://docs.anthropic.com/zh-CN/docs/claude-code/cli-reference"><strong>CLI 使用和控制</strong></a> - 完整的 CLI 文档</p></li><li><p><a href="https://docs.anthropic.com/zh-CN/docs/claude-code/github-actions"><strong>GitHub Actions 集成</strong></a> - 使用 Claude 自动化您的 GitHub 工作流程</p></li><li><p><a href="https://docs.anthropic.com/zh-CN/docs/claude-code/common-workflows"><strong>常见工作流程</strong></a> - 常见用例的分步指南</p></li></ul><h1 id="开始使用-claude-code-hooks"><a class="markdownIt-Anchor" href="#开始使用-claude-code-hooks"></a> 开始使用 Claude Code hooks</h1><p>学习如何通过注册 shell 命令来自定义和扩展 Claude Code 的行为</p><p>Claude Code hooks 是用户定义的 shell 命令，在 Claude Code 生命周期的各个点执行。Hooks 提供对 Claude Code 行为的确定性控制，确保某些操作总是发生，而不是依赖 LLM 选择运行它们。</p><p>有关 hooks 的参考文档，请参阅 <a href="https://docs.anthropic.com/zh-CN/docs/claude-code/hooks"><strong>Hooks 参考</strong></a>。</p><p>hooks 的示例用例包括：</p><ul><li><p><strong>通知</strong>：自定义当 Claude Code 等待您的输入或运行权限时如何获得通知。</p></li><li><p><strong>自动格式化</strong>：在每次文件编辑后对 .ts 文件运行 <code>prettier</code>，对 .go 文件运行 <code>gofmt</code> 等。</p></li><li><p><strong>日志记录</strong>：跟踪和计算所有执行的命令以用于合规性或调试。</p></li><li><p><strong>反馈</strong>：当 Claude Code 产生不遵循您的代码库约定的代码时提供自动反馈。</p></li><li><p><strong>自定义权限</strong>：阻止对生产文件或敏感目录的修改。</p></li></ul><p>通过将这些规则编码为 hooks 而不是提示指令，您将建议转换为应用程序级代码，每次预期运行时都会执行。</p><p>您必须考虑添加 hooks 时的安全影响，因为 hooks 在代理循环期间使用您当前环境的凭据自动运行。 例如，恶意 hooks 代码可以泄露您的数据。在注册之前始终检查您的 hooks 实现。</p><p>有关完整的安全最佳实践，请参阅 hooks 参考文档中的<a href="https://docs.anthropic.com/zh-CN/docs/claude-code/hooks#security-considerations"><strong>安全考虑</strong></a>。</p><h2 id="hook-事件概述"><a class="markdownIt-Anchor" href="#hook-事件概述"></a> Hook 事件概述</h2><p>Claude Code 提供了几个在工作流程不同点运行的 hook 事件：</p><ul><li><p><strong>PreToolUse</strong>：在工具调用之前运行（可以阻止它们）</p></li><li><p><strong>PostToolUse</strong>：在工具调用完成后运行</p></li><li><p><strong>Notification</strong>：当 Claude Code 发送通知时运行</p></li><li><p><strong>Stop</strong>：当 Claude Code 完成响应时运行</p></li><li><p><strong>SubagentStop</strong>：当子代理任务完成时运行</p></li></ul><p>每个事件接收不同的数据，并可以以不同的方式控制 Claude 的行为。</p><h2 id="快速开始-2"><a class="markdownIt-Anchor" href="#快速开始-2"></a> 快速开始</h2><p>在这个快速开始中，您将添加一个记录 Claude Code 运行的 shell 命令的 hook。</p><h3 id="先决条件"><a class="markdownIt-Anchor" href="#先决条件"></a> 先决条件</h3><p>安装 <code>jq</code> 用于命令行中的 JSON 处理。</p><h3 id="步骤-1打开-hooks-配置"><a class="markdownIt-Anchor" href="#步骤-1打开-hooks-配置"></a> 步骤 1：打开 hooks 配置</h3><p>运行 <code>/hooks</code> <a href="https://docs.anthropic.com/zh-CN/docs/claude-code/slash-commands"><strong>斜杠命令</strong></a> 并选择 <code>PreToolUse</code> hook 事件。</p><p><code>PreToolUse</code> hooks 在工具调用之前运行，可以阻止它们，同时为 Claude 提供关于如何做不同事情的反馈。</p><h3 id="步骤-2添加匹配器"><a class="markdownIt-Anchor" href="#步骤-2添加匹配器"></a> 步骤 2：添加匹配器</h3><p>选择 <code>+ Add new matcher…</code> 以仅在 Bash 工具调用上运行您的 hook。</p><p>为匹配器输入 <code>Bash</code>。</p><p>您可以使用 <code>*</code> 来匹配所有工具。</p><h3 id="步骤-3添加-hook"><a class="markdownIt-Anchor" href="#步骤-3添加-hook"></a> 步骤 3：添加 hook</h3><p>选择 <code>+ Add new hook…</code> 并输入此命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">jq -r <span class="string">&#x27;&quot;\(.tool_input.command) - \(.tool_input.description // &quot;No description&quot;)&quot;&#x27;</span> &gt;&gt; ~/.claude/bash-command-log.txt</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="步骤-4保存您的配置"><a class="markdownIt-Anchor" href="#步骤-4保存您的配置"></a> 步骤 4：保存您的配置</h3><p>对于存储位置，选择 <code>User settings</code>，因为您正在记录到您的主目录。然后此 hook 将应用于所有项目，而不仅仅是您当前的项目。</p><p>然后按 Esc 直到您返回到 REPL。您的 hook 现在已注册！</p><h3 id="步骤-5验证您的-hook"><a class="markdownIt-Anchor" href="#步骤-5验证您的-hook"></a> 步骤 5：验证您的 hook</h3><p>再次运行 <code>/hooks</code> 或检查 <code>~/.claude/settings.json</code> 以查看您的配置：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;hooks&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;PreToolUse&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;matcher&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Bash&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;hooks&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;command&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;jq -r &#x27;\&quot;\(.tool_input.command) - \(.tool_input.description // \&quot;No description\&quot;)\&quot;&#x27; &gt;&gt; ~/.claude/bash-command-log.txt&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="步骤-6测试您的-hook"><a class="markdownIt-Anchor" href="#步骤-6测试您的-hook"></a> 步骤 6：测试您的 hook</h3><p>要求 Claude 运行一个简单的命令，如 <code>ls</code> 并检查您的日志文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> ~/.claude/bash-command-log.txt</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>您应该看到类似以下的条目：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls - Lists files and directories</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="更多示例"><a class="markdownIt-Anchor" href="#更多示例"></a> 更多示例</h2><p>有关完整的示例实现，请参阅我们公共代码库中的 <a href="https://github.com/anthropics/claude-code/blob/main/examples/hooks/bash_command_validator_example.py"><strong>bash 命令验证器示例</strong></a>。</p><h3 id="代码格式化-hook"><a class="markdownIt-Anchor" href="#代码格式化-hook"></a> 代码格式化 Hook</h3><p>编辑后自动格式化 TypeScript 文件：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;hooks&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;PostToolUse&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;matcher&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Edit|MultiEdit|Write&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;hooks&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;command&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;jq -r &#x27;.tool_input.file_path&#x27; | &#123; read file_path; if echo \&quot;$file_path\&quot; | grep -q &#x27;\.ts$&#x27;; then npx prettier --write \&quot;$file_path\&quot;; fi; &#125;&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="自定义通知-hook"><a class="markdownIt-Anchor" href="#自定义通知-hook"></a> 自定义通知 Hook</h3><p>当 Claude 需要输入时获得桌面通知：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;hooks&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;Notification&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;matcher&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;hooks&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;command&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;notify-send &#x27;Claude Code&#x27; &#x27;Awaiting your input&#x27;&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="文件保护-hook"><a class="markdownIt-Anchor" href="#文件保护-hook"></a> 文件保护 Hook</h3><p>阻止对敏感文件的编辑：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;hooks&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;PreToolUse&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;matcher&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Edit|MultiEdit|Write&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;hooks&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;command&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;python3 -c \&quot;import json, sys; data=json.load(sys.stdin); path=data.get(&#x27;tool_input&#x27;,&#123;&#125;).get(&#x27;file_path&#x27;,&#x27;&#x27;); sys.exit(2 if any(p in path for p in [&#x27;.env&#x27;, &#x27;package-lock.json&#x27;, &#x27;.git/&#x27;]) else 0)\&quot;&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h1 id="故障排除"><a class="markdownIt-Anchor" href="#故障排除"></a> 故障排除</h1><p>发现Claude Code安装和使用中常见问题的解决方案。</p><h2 id="常见安装问题"><a class="markdownIt-Anchor" href="#常见安装问题"></a> 常见安装问题</h2><h3 id="linux权限问题"><a class="markdownIt-Anchor" href="#linux权限问题"></a> Linux权限问题</h3><p>使用npm安装Claude Code时，如果您的npm全局前缀不可用户写入（例如<code>/usr</code>或<code>/usr/local</code>），您可能会遇到权限错误。</p><h4 id="推荐解决方案创建用户可写的npm前缀"><a class="markdownIt-Anchor" href="#推荐解决方案创建用户可写的npm前缀"></a> 推荐解决方案：创建用户可写的npm前缀</h4><p>最安全的方法是配置npm使用您主目录内的目录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">首先，保存现有全局包的列表以便后续迁移</span></span><br><span class="line">npm list -g --depth=0 &gt; ~/npm-global-packages.txt</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">为您的全局包创建目录</span></span><br><span class="line">mkdir -p ~/.npm-global</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置npm使用新的目录路径</span></span><br><span class="line">npm config set prefix ~/.npm-global</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">注意：根据您的shell，将~/.bashrc替换为~/.zshrc、~/.profile或其他适当的文件</span></span><br><span class="line">echo &#x27;export PATH=~/.npm-global/bin:$PATH&#x27; &gt;&gt; ~/.bashrc</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">应用新的PATH设置</span></span><br><span class="line">source ~/.bashrc</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">现在在新位置重新安装Claude Code</span></span><br><span class="line">npm install -g @anthropic-ai/claude-code</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">可选：在新位置重新安装您之前的全局包</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看~/npm-global-packages.txt并安装您想要保留的包</span></span><br></pre></td></tr></table></figure><p>推荐此解决方案是因为它：</p><ul><li><p>避免修改系统目录权限</p></li><li><p>为您的全局npm包创建一个干净、专用的位置</p></li><li><p>遵循安全最佳实践</p></li></ul><h4 id="系统恢复如果您已运行更改系统文件所有权和权限或类似的命令"><a class="markdownIt-Anchor" href="#系统恢复如果您已运行更改系统文件所有权和权限或类似的命令"></a> 系统恢复：如果您已运行更改系统文件所有权和权限或类似的命令</h4><p>如果您已经运行了更改系统目录权限的命令（例如<code>sudo chown -R $USER:$(id -gn) /usr &amp;&amp; sudo chmod -R u+w /usr</code>）并且您的系统现在损坏（例如，如果您看到<code>sudo: /usr/bin/sudo must be owned by uid 0 and have the setuid bit set</code>），您需要执行恢复步骤。</p><h5 id="ubuntudebian恢复方法"><a class="markdownIt-Anchor" href="#ubuntudebian恢复方法"></a> Ubuntu/Debian恢复方法：</h5><ol><li><p>重启时，按住<strong>SHIFT</strong>键访问GRUB菜单</p></li><li><p>选择”Advanced options for Ubuntu/Debian”</p></li><li><p>选择恢复模式选项</p></li><li><p>选择”Drop to root shell prompt”</p></li><li><p>将文件系统重新挂载为可写：</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mount -o remount,rw /</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="6"><li>修复权限：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 恢复root所有权</span></span><br><span class="line"><span class="built_in">chown</span> -R root:root /usr</span><br><span class="line"><span class="built_in">chmod</span> -R 755 /usr</span><br><span class="line"></span><br><span class="line"><span class="comment"># 确保/usr/local由您的用户拥有以用于npm包</span></span><br><span class="line"><span class="built_in">chown</span> -R YOUR_USERNAME:YOUR_USERNAME /usr/local</span><br><span class="line"></span><br><span class="line"><span class="comment"># 为关键二进制文件设置setuid位</span></span><br><span class="line"><span class="built_in">chmod</span> u+s /usr/bin/sudo</span><br><span class="line"><span class="built_in">chmod</span> 4755 /usr/bin/sudo</span><br><span class="line"><span class="built_in">chmod</span> u+s /usr/bin/su</span><br><span class="line"><span class="built_in">chmod</span> u+s /usr/bin/passwd</span><br><span class="line"><span class="built_in">chmod</span> u+s /usr/bin/newgrp</span><br><span class="line"><span class="built_in">chmod</span> u+s /usr/bin/gpasswd</span><br><span class="line"><span class="built_in">chmod</span> u+s /usr/bin/chsh</span><br><span class="line"><span class="built_in">chmod</span> u+s /usr/bin/chfn</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修复sudo配置</span></span><br><span class="line"><span class="built_in">chown</span> root:root /usr/libexec/sudo/sudoers.so</span><br><span class="line"><span class="built_in">chmod</span> 4755 /usr/libexec/sudo/sudoers.so</span><br><span class="line"><span class="built_in">chown</span> root:root /etc/sudo.conf</span><br><span class="line"><span class="built_in">chmod</span> 644 /etc/sudo.conf</span><br></pre></td></tr></table></figure><ol start="7"><li>重新安装受影响的包（可选但推荐）：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">保存已安装包的列表</span></span><br><span class="line">dpkg --get-selections &gt; /tmp/installed_packages.txt</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重新安装它们</span></span><br><span class="line">awk &#x27;&#123;print $1&#125;&#x27; /tmp/installed_packages.txt | xargs -r apt-get install --reinstall -y</span><br></pre></td></tr></table></figure><ol start="8"><li>重启：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="替代live-usb恢复方法"><a class="markdownIt-Anchor" href="#替代live-usb恢复方法"></a> 替代Live USB恢复方法：</h5><p>如果恢复模式不起作用，您可以使用live USB：</p><ol><li><p>从live USB启动（Ubuntu、Debian或任何Linux发行版）</p></li><li><p>找到您的系统分区：</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lsblk</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="3"><li>挂载您的系统分区：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> mount /dev/sdXY /mnt  <span class="comment"># 将sdXY替换为您的实际系统分区</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="4"><li>如果您有单独的启动分区，也要挂载它：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> mount /dev/sdXZ /mnt/boot  <span class="comment"># 如果需要</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="5"><li>Chroot到您的系统：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">对于Ubuntu/Debian：</span></span><br><span class="line">sudo chroot /mnt</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">对于基于Arch的系统：</span></span><br><span class="line">sudo arch-chroot /mnt</span><br></pre></td></tr></table></figure><ol start="6"><li>按照上面Ubuntu/Debian恢复方法的步骤6-8执行</li></ol><p>恢复系统后，按照上面的推荐解决方案设置用户可写的npm前缀。</p><h2 id="自动更新器问题"><a class="markdownIt-Anchor" href="#自动更新器问题"></a> 自动更新器问题</h2><p>如果Claude Code无法自动更新，可能是由于您的npm全局前缀目录的权限问题。按照上面的<a href="https://docs.anthropic.com/zh-CN/docs/claude-code/troubleshooting#%E6%8E%A8%E8%8D%90%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E5%88%9B%E5%BB%BA%E7%94%A8%E6%88%B7%E5%8F%AF%E5%86%99%E7%9A%84npm%E5%89%8D%E7%BC%80"><strong>推荐解决方案</strong></a>来修复此问题。</p><p>如果您更愿意禁用自动更新器，您可以将<code>DISABLE_AUTOUPDATER</code><a href="https://docs.anthropic.com/zh-CN/docs/claude-code/settings#environment-variables"><strong>环境变量</strong></a>设置为<code>1</code></p><h2 id="权限和身份验证"><a class="markdownIt-Anchor" href="#权限和身份验证"></a> 权限和身份验证</h2><h3 id="重复的权限提示"><a class="markdownIt-Anchor" href="#重复的权限提示"></a> 重复的权限提示</h3><p>如果您发现自己重复批准相同的命令，您可以使用<code>/permissions</code>命令允许特定工具在无需批准的情况下运行。请参阅<a href="https://docs.anthropic.com/zh-CN/docs/claude-code/iam#configuring-permissions"><strong>权限文档</strong></a>。</p><h3 id="身份验证问题"><a class="markdownIt-Anchor" href="#身份验证问题"></a> 身份验证问题</h3><p>如果您遇到身份验证问题：</p><ol><li><p>运行<code>/logout</code>完全退出登录</p></li><li><p>关闭Claude Code</p></li><li><p>使用<code>claude</code>重启并重新完成身份验证过程</p></li></ol><p>如果问题持续存在，请尝试：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> -rf ~/.config/claude-code/auth.json</span><br><span class="line">claude</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这会删除您存储的身份验证信息并强制进行干净的登录。</p><h2 id="性能和稳定性"><a class="markdownIt-Anchor" href="#性能和稳定性"></a> 性能和稳定性</h2><h3 id="高cpu或内存使用率"><a class="markdownIt-Anchor" href="#高cpu或内存使用率"></a> 高CPU或内存使用率</h3><p>Claude Code设计用于与大多数开发环境配合使用，但在处理大型代码库时可能会消耗大量资源。如果您遇到性能问题：</p><ol><li><p>定期使用<code>/compact</code>来减少上下文大小</p></li><li><p>在主要任务之间关闭并重启Claude Code</p></li><li><p>考虑将大型构建目录添加到您的<code>.gitignore</code>文件中</p></li></ol><h3 id="命令挂起或冻结"><a class="markdownIt-Anchor" href="#命令挂起或冻结"></a> 命令挂起或冻结</h3><p>如果Claude Code似乎无响应：</p><ol><li><p>按Ctrl+C尝试取消当前操作</p></li><li><p>如果无响应，您可能需要关闭终端并重启</p></li></ol><h3 id="esc键在jetbrainsintellij-pycharm等终端中不工作"><a class="markdownIt-Anchor" href="#esc键在jetbrainsintellij-pycharm等终端中不工作"></a> ESC键在JetBrains（IntelliJ、PyCharm等）终端中不工作</h3><p>如果您在JetBrains终端中使用Claude Code，ESC键无法按预期中断代理，这可能是由于与JetBrains默认快捷键的键绑定冲突。</p><p>要修复此问题：</p><ol><li><p>转到设置 → 工具 → 终端</p></li><li><p>点击”覆盖IDE快捷键”旁边的”配置终端键绑定”超链接</p></li><li><p>在终端键绑定中，向下滚动到”切换焦点到编辑器”并删除该快捷键</p></li></ol><p>这将允许ESC键正确用于取消Claude Code操作，而不是被PyCharm的”切换焦点到编辑器”操作捕获。</p><h2 id="获取更多帮助"><a class="markdownIt-Anchor" href="#获取更多帮助"></a> 获取更多帮助</h2><p>如果您遇到此处未涵盖的问题：</p><ol><li><p>在Claude Code中使用<code>/bug</code>命令直接向Anthropic报告问题</p></li><li><p>检查<a href="https://github.com/anthropics/claude-code"><strong>GitHub存储库</strong></a>了解已知问题</p></li><li><p>运行<code>/doctor</code>检查您的Claude Code安装的健康状况</p></li></ol><h1 id="设置-claude-code"><a class="markdownIt-Anchor" href="#设置-claude-code"></a> 设置 Claude Code</h1><p>在您的开发机器上安装、认证并开始使用 Claude Code。</p><h2 id="系统要求"><a class="markdownIt-Anchor" href="#系统要求"></a> 系统要求</h2><ul><li><p><strong>操作系统</strong>: macOS 10.15+、Ubuntu 20.04+/Debian 10+ 或通过 WSL 的 Windows</p></li><li><p><strong>硬件</strong>: 最少 4GB RAM</p></li><li><p><strong>软件</strong>:</p><ul><li><p>Node.js 18+</p></li><li><p><a href="https://git-scm.com/downloads"><strong>git</strong></a> 2.23+（可选）</p></li><li><p><a href="https://cli.github.com/"><strong>GitHub</strong></a> 或 <a href="https://gitlab.com/gitlab-org/cli"><strong>GitLab</strong></a> CLI 用于 PR 工作流（可选）</p></li></ul></li><li><p><strong>网络</strong>: 需要互联网连接进行认证和 AI 处理</p></li><li><p><strong>地区</strong>: 仅在<a href="https://www.anthropic.com/supported-countries"><strong>支持的国家</strong></a>可用</p></li></ul><h2 id="安装和认证"><a class="markdownIt-Anchor" href="#安装和认证"></a> 安装和认证</h2><p><strong>1</strong></p><p><strong>安装 Claude Code</strong></p><p>To install Claude Code, run the following command:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @anthropic-ai/claude-code</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>2</strong></p><p><strong>导航到您的项目</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> your-project-directory </span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>3</strong></p><p><strong>启动 Claude Code</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">claude</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>4</strong></p><p><strong>完成认证</strong></p><p>Claude Code 提供多种认证选项：</p><ol><li><p><strong>Anthropic Console</strong>: 默认选项。通过 Anthropic Console 连接并 完成 OAuth 流程。需要在 <a href="https://console.anthropic.com/"><strong>console.anthropic.com</strong></a> 激活计费。</p></li><li><p><strong>Claude App（Pro 或 Max 计划）</strong>: 订阅 Claude 的 <a href="https://www.anthropic.com/pricing"><strong>Pro 或 Max 计划</strong></a>，获得包含 Claude Code 和网页界面的统一订阅。以相同价格获得更多价值，同时在一个地方管理您的账户。使用您的 <a href="http://Claude.ai">Claude.ai</a> 账户登录。在启动期间，选择与您的订阅类型匹配的选项。</p></li><li><p><strong>企业平台</strong>: 配置 Claude Code 使用 <a href="https://docs.anthropic.com/zh-CN/docs/claude-code/bedrock-vertex-proxies"><strong>Amazon Bedrock 或 Google Vertex AI</strong></a> 进行企业部署，使用您现有的云基础设施。</p></li></ol><h2 id="故障排除-2"><a class="markdownIt-Anchor" href="#故障排除-2"></a> 故障排除</h2><h3 id="wsl-安装故障排除"><a class="markdownIt-Anchor" href="#wsl-安装故障排除"></a> WSL 安装故障排除</h3><p>目前，Claude Code 不能直接在 Windows 中运行，而是需要 WSL。</p><p>您可能在 WSL 中遇到以下问题：</p><p><strong>操作系统/平台检测问题</strong>: 如果您在安装过程中收到错误，WSL 可能正在使用 Windows <code>npm</code>。尝试：</p><ul><li><p>在安装前运行 <code>npm config set os linux</code></p></li><li><p>使用 <code>npm install -g @anthropic-ai/claude-code --force --no-os-check</code> 安装（不要使用 <code>sudo</code>）</p></li></ul><p><strong>找不到 Node 错误</strong>: 如果您在运行 <code>claude</code> 时看到 <code>exec: node: not found</code>，您的 WSL 环境可能正在使用 Windows 安装的 Node.js。您可以通过 <code>which npm</code> 和 <code>which node</code> 确认这一点，它们应该指向以 <code>/usr/</code> 开头的 Linux 路径，而不是 <code>/mnt/c/</code>。要解决这个问题，请尝试通过您的 Linux 发行版的包管理器或通过 <a href="https://github.com/nvm-sh/nvm"><code>**nvm**</code></a> 安装 Node。</p><h2 id="优化您的终端设置"><a class="markdownIt-Anchor" href="#优化您的终端设置"></a> 优化您的终端设置</h2><p>Claude Code 在您的终端正确配置时效果最佳。遵循这些指南来优化您的体验。</p><p><strong>支持的 shell</strong>:</p><ul><li><p>Bash</p></li><li><p>Zsh</p></li><li><p>Fish</p></li></ul><h3 id="主题和外观"><a class="markdownIt-Anchor" href="#主题和外观"></a> 主题和外观</h3><p>Claude 无法控制您终端的主题。这由您的终端应用程序处理。您可以在入门时或通过 <code>/config</code> 命令随时将 Claude Code 的主题与您的终端匹配</p><h3 id="换行"><a class="markdownIt-Anchor" href="#换行"></a> 换行</h3><p>您有几个选项可以在 Claude Code 中输入换行：</p><ul><li><p><strong>快速转义</strong>: 输入 <code>\</code> 然后按 Enter 创建新行</p></li><li><p><strong>键盘快捷键</strong>: 通过适当配置按 Option+Enter（Meta+Enter）</p></li></ul><p>在您的终端中设置 Option+Enter：</p><p><strong>对于 Mac Terminal.app:</strong></p><ol><li><p>打开设置 → 配置文件 → 键盘</p></li><li><p>勾选”使用 Option 作为 Meta 键”</p></li></ol><p><strong>对于 iTerm2 和 VSCode 终端:</strong></p><ol><li><p>打开设置 → 配置文件 → 键</p></li><li><p>在常规下，将左/右 Option 键设置为”Esc+”</p></li></ol><p><strong>iTerm2 和 VSCode 用户提示</strong>: 在 Claude Code 中运行 <code>/terminal-setup</code> 以自动配置 Shift+Enter 作为更直观的替代方案。</p><h3 id="通知设置"><a class="markdownIt-Anchor" href="#通知设置"></a> 通知设置</h3><p>通过适当的通知配置，永远不会错过 Claude 完成任务的时机：</p><h4 id="终端铃声通知"><a class="markdownIt-Anchor" href="#终端铃声通知"></a> 终端铃声通知</h4><p>在任务完成时启用声音警报：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">claude config <span class="built_in">set</span> --global preferredNotifChannel terminal_bell</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>对于 macOS 用户</strong>: 不要忘记在系统设置 → 通知 → [您的终端应用] 中启用通知权限。</p><h4 id="iterm-2-系统通知"><a class="markdownIt-Anchor" href="#iterm-2-系统通知"></a> iTerm 2 系统通知</h4><p>对于任务完成时的 iTerm 2 警报：</p><ol><li><p>打开 iTerm 2 偏好设置</p></li><li><p>导航到配置文件 → 终端</p></li><li><p>启用”静音铃声”和过滤器警报 → “发送转义序列生成的警报”</p></li><li><p>设置您首选的通知延迟</p></li></ol><p>请注意，这些通知特定于 iTerm 2，在默认的 macOS 终端中不可用。</p><h3 id="处理大型输入"><a class="markdownIt-Anchor" href="#处理大型输入"></a> 处理大型输入</h3><p>在处理大量代码或长指令时：</p><ul><li><p><strong>避免直接粘贴</strong>: Claude Code 可能难以处理非常长的粘贴内容</p></li><li><p><strong>使用基于文件的工作流</strong>: 将内容写入文件并要求 Claude 读取它</p></li><li><p><strong>注意 VS Code 限制</strong>: VS Code 终端特别容易截断长粘贴</p></li></ul><h3 id="vim-模式"><a class="markdownIt-Anchor" href="#vim-模式"></a> Vim 模式</h3><p>Claude Code 支持 Vim 键绑定的子集，可以通过 <code>/vim</code> 启用或通过 <code>/config</code> 配置。</p><p>支持的子集包括：</p><ul><li><p>模式切换: <code>Esc</code>（到 NORMAL）、<code>i</code>/<code>I</code>、<code>a</code>/<code>A</code>、<code>o</code>/<code>O</code>（到 INSERT）</p></li><li><p>导航: <code>h</code>/<code>j</code>/<code>k</code>/<code>l</code>、<code>w</code>/<code>e</code>/<code>b</code>、<code>0</code>/<code>$</code>/<code>^</code>、<code>gg</code>/<code>G</code></p></li><li><p>编辑: <code>x</code>、<code>dw</code>/<code>de</code>/<code>db</code>/<code>dd</code>/<code>D</code>、<code>cw</code>/<code>ce</code>/<code>cb</code>/<code>cc</code>/<code>C</code>、<code>.</code>（重复）</p></li></ul><h1 id="身份和访问管理"><a class="markdownIt-Anchor" href="#身份和访问管理"></a> 身份和访问管理</h1><p>了解如何为您的组织配置Claude Code的用户身份验证、授权和访问控制。</p><h2 id="身份验证方法"><a class="markdownIt-Anchor" href="#身份验证方法"></a> 身份验证方法</h2><p>设置Claude Code需要访问Anthropic模型。对于团队，您可以通过以下三种方式之一设置Claude Code访问：</p><ul><li><p>通过Anthropic控制台使用Anthropic API</p></li><li><p>Amazon Bedrock</p></li><li><p>Google Vertex AI</p></li></ul><h3 id="anthropic-api身份验证"><a class="markdownIt-Anchor" href="#anthropic-api身份验证"></a> Anthropic API身份验证</h3><p><strong>通过Anthropic API为您的团队设置Claude Code访问：</strong></p><ol><li><p>使用您现有的Anthropic控制台账户或创建新的Anthropic控制台账户</p></li><li><p>您可以通过以下任一方法添加用户：</p><ul><li><p>从控制台内批量邀请用户（控制台 -&gt; 设置 -&gt; 成员 -&gt; 邀请）</p></li><li><p><a href="https://support.anthropic.com/en/articles/10280258-setting-up-single-sign-on-on-the-api-console"><strong>设置SSO</strong></a></p></li></ul></li><li><p>邀请用户时，他们需要以下角色之一：</p><ul><li><p>“Claude Code”角色意味着用户只能创建Claude Code API密钥</p></li><li><p>“开发者”角色意味着用户可以创建任何类型的API密钥</p></li></ul></li><li><p>每个受邀用户需要完成以下步骤：</p><ul><li><p>接受控制台邀请</p></li><li><p><a href="https://docs.anthropic.com/zh-CN/docs/claude-code/setup#system-requirements"><strong>检查系统要求</strong></a></p></li><li><p><a href="https://docs.anthropic.com/zh-CN/docs/claude-code/setup#installation"><strong>安装Claude Code</strong></a></p></li><li><p>使用控制台账户凭据登录</p></li></ul></li></ol><h3 id="云提供商身份验证"><a class="markdownIt-Anchor" href="#云提供商身份验证"></a> 云提供商身份验证</h3><p><strong>通过Bedrock或Vertex为您的团队设置Claude Code访问：</strong></p><ol><li><p>遵循<a href="https://docs.anthropic.com/zh-CN/docs/claude-code/amazon-bedrock"><strong>Bedrock文档</strong></a>或<a href="https://docs.anthropic.com/zh-CN/docs/claude-code/google-vertex-ai"><strong>Vertex文档</strong></a></p></li><li><p>向您的用户分发环境变量和生成云凭据的说明。了解更多关于如何<a href="https://docs.anthropic.com/zh-CN/docs/claude-code/settings"><strong>在此处管理配置</strong></a>。</p></li><li><p>用户可以<a href="https://docs.anthropic.com/zh-CN/docs/claude-code/setup#installation"><strong>安装Claude Code</strong></a></p></li></ol><h2 id="访问控制和权限"><a class="markdownIt-Anchor" href="#访问控制和权限"></a> 访问控制和权限</h2><p>我们支持细粒度权限，以便您能够准确指定代理被允许做什么（例如运行测试、运行linter）以及不被允许做什么（例如更新云基础设施）。这些权限设置可以检入版本控制并分发给您组织中的所有开发者，也可以由个别开发者自定义。</p><h3 id="权限系统"><a class="markdownIt-Anchor" href="#权限系统"></a> 权限系统</h3><p>Claude Code使用分层权限系统来平衡功能和安全性：</p><table><thead><tr><th><strong>工具类型</strong></th><th><strong>示例</strong></th><th><strong>需要批准</strong></th><th><strong>”是的，不要再问”行为</strong></th></tr></thead><tbody><tr><td>只读</td><td>文件读取、LS、Grep</td><td>否</td><td>不适用</td></tr><tr><td>Bash命令</td><td>Shell执行</td><td>是</td><td>每个项目目录和命令永久生效</td></tr><tr><td>文件修改</td><td>编辑/写入文件</td><td>是</td><td>直到会话结束</td></tr></tbody></table><h3 id="配置权限"><a class="markdownIt-Anchor" href="#配置权限"></a> 配置权限</h3><p>您可以使用<code>/permissions</code>查看和管理Claude Code的工具权限。此UI列出所有权限规则及其来源的settings.json文件。</p><ul><li><p><strong>允许</strong>规则将允许Claude Code使用指定工具而无需进一步手动批准。</p></li><li><p><strong>拒绝</strong>规则将阻止Claude Code使用指定工具。拒绝规则优先于允许规则。</p></li><li><p><strong>其他目录</strong>将Claude的文件访问扩展到初始工作目录之外的目录。</p></li><li><p><strong>默认模式</strong>控制Claude在遇到新请求时的权限行为。</p></li></ul><p>权限规则使用格式：<code>Tool(optional-specifier)</code></p><p>仅为工具名称的规则匹配该工具的任何使用。例如，将<code>Bash</code>添加到允许规则列表中将允许Claude Code使用Bash工具而无需用户批准。</p><h4 id="权限模式"><a class="markdownIt-Anchor" href="#权限模式"></a> 权限模式</h4><p>Claude Code支持几种权限模式，可以在<a href="https://docs.anthropic.com/zh-CN/docs/claude-code/settings#settings-files"><strong>设置文件</strong></a>中设置为<code>defaultMode</code>：</p><table><thead><tr><th><strong>模式</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td><code>default</code></td><td>标准行为 - 在首次使用每个工具时提示权限</td></tr><tr><td><code>acceptEdits</code></td><td>自动接受会话的文件编辑权限</td></tr><tr><td><code>plan</code></td><td>计划模式 - Claude可以分析但不能修改文件或执行命令</td></tr><tr><td><code>bypassPermissions</code></td><td>跳过所有权限提示（需要安全环境 - 请参见下面的警告）</td></tr></tbody></table><h4 id="工作目录"><a class="markdownIt-Anchor" href="#工作目录"></a> 工作目录</h4><p>默认情况下，Claude可以访问启动它的目录中的文件。您可以扩展此访问权限：</p><ul><li><p><strong>启动期间</strong>：使用<code>--add-dir &lt;path&gt;</code> CLI参数</p></li><li><p><strong>会话期间</strong>：使用<code>/add-dir</code>斜杠命令</p></li><li><p><strong>持久配置</strong>：添加到<a href="https://docs.anthropic.com/zh-CN/docs/claude-code/settings#settings-files"><strong>设置文件</strong></a>中的<code>additionalDirectories</code></p></li></ul><p>其他目录中的文件遵循与原始工作目录相同的权限规则 - 它们变得可读而无需提示，文件编辑权限遵循当前权限模式。</p><h4 id="工具特定权限规则"><a class="markdownIt-Anchor" href="#工具特定权限规则"></a> 工具特定权限规则</h4><p>一些工具使用可选说明符进行更细粒度的权限控制。例如，带有<code>Bash(git diff:*)</code>的允许规则将允许以<code>git diff</code>开头的Bash命令。以下工具支持带有说明符的权限规则：</p><p><strong>Bash</strong></p><ul><li><p><code>Bash(npm run build)</code> 匹配确切的Bash命令<code>npm run build</code></p></li><li><p><code>Bash(npm run test:*)</code> 匹配以<code>npm run test</code>开头的Bash命令。</p></li></ul><p>Claude Code了解shell操作符（如<code>&amp;&amp;</code>），因此像<code>Bash(safe-cmd:*)</code>这样的前缀匹配规则不会给它运行命令<code>safe-cmd &amp;&amp; other-cmd</code>的权限</p><p><strong>Read &amp; Edit</strong></p><p><code>Edit</code>规则适用于所有编辑文件的内置工具。Claude将尽力将<code>Read</code>规则应用于所有读取文件的内置工具，如Grep、Glob和LS。</p><p>Read和Edit规则都遵循<a href="https://git-scm.com/docs/gitignore"><strong>gitignore</strong></a>规范。模式相对于包含<code>.claude/settings.json</code>的目录解析。要引用绝对路径，请使用<code>//</code>。对于相对于您主目录的路径，请使用<code>~/</code>。</p><ul><li><p><code>Edit(docs/**)</code> 匹配对项目<code>docs</code>目录中文件的编辑</p></li><li><p><code>Read(~/.zshrc)</code> 匹配对您的<code>~/.zshrc</code>文件的读取</p></li><li><p><code>Edit(//tmp/scratch.txt)</code> 匹配对<code>/tmp/scratch.txt</code>的编辑</p></li></ul><p><strong>WebFetch</strong></p><ul><li><code>WebFetch(domain:example.com)</code> 匹配对example.com的获取请求</li></ul><p><strong>MCP</strong></p><ul><li><p><code>mcp__puppeteer</code> 匹配由<code>puppeteer</code>服务器提供的任何工具（在Claude Code中配置的名称）</p></li><li><p><code>mcp__puppeteer__puppeteer_navigate</code> 匹配由<code>puppeteer</code>服务器提供的<code>puppeteer_navigate</code>工具</p></li></ul><h3 id="企业管理策略设置"><a class="markdownIt-Anchor" href="#企业管理策略设置"></a> 企业管理策略设置</h3><p>对于Claude Code的企业部署，我们支持企业管理策略设置，这些设置优先于用户和项目设置。这允许系统管理员强制执行用户无法覆盖的安全策略。</p><p>系统管理员可以将策略部署到：</p><ul><li><p><strong>macOS</strong>：<code>/Library/Application Support/ClaudeCode/managed-settings.json</code></p></li><li><p><strong>Linux和Windows（通过WSL）</strong>：<code>/etc/claude-code/managed-settings.json</code></p></li></ul><p>这些策略文件遵循与常规<a href="https://docs.anthropic.com/zh-CN/docs/claude-code/settings#settings-files"><strong>设置文件</strong></a>相同的格式，但不能被用户或项目设置覆盖。这确保了整个组织的一致安全策略。</p><h3 id="设置优先级"><a class="markdownIt-Anchor" href="#设置优先级"></a> 设置优先级</h3><p>当存在多个设置源时，它们按以下顺序应用（从最高到最低优先级）：</p><ol><li><p>企业策略</p></li><li><p>命令行参数</p></li><li><p>本地项目设置（<code>.claude/settings.local.json</code>）</p></li><li><p>共享项目设置（<code>.claude/settings.json</code>）</p></li><li><p>用户设置（<code>~/.claude/settings.json</code>）</p></li></ol><p>此层次结构确保始终执行组织策略，同时在适当的情况下仍允许在项目和用户级别的灵活性。</p><h3 id="使用钩子进行额外权限控制"><a class="markdownIt-Anchor" href="#使用钩子进行额外权限控制"></a> 使用钩子进行额外权限控制</h3><p><a href="https://docs.anthropic.com/zh-CN/docs/claude-code/hooks"><strong>Claude Code钩子</strong></a>提供了一种注册自定义shell命令以在运行时执行权限评估的方法。当Claude Code进行工具调用时，PreToolUse钩子在权限系统运行之前运行，钩子输出可以确定是否批准或拒绝工具调用以代替权限系统。</p><h2 id="凭据管理"><a class="markdownIt-Anchor" href="#凭据管理"></a> 凭据管理</h2><p>Claude Code支持通过Claude.ai凭据、Anthropic API凭据、Bedrock Auth和Vertex Auth进行身份验证。在macOS上，API密钥、OAuth令牌和其他凭据存储在加密的macOS钥匙串中。或者，设置<a href="https://docs.anthropic.com/zh-CN/docs/claude-code/settings#available-settings"><strong>apiKeyHelper</strong></a>可以设置为返回API密钥的shell脚本。默认情况下，此助手在5分钟后或在HTTP 401响应时被调用；指定环境变量<code>CLAUDE_CODE_API_KEY_HELPER_TTL_MS</code>定义自定义刷新间隔。</p><h1 id="有效管理成本"><a class="markdownIt-Anchor" href="#有效管理成本"></a> 有效管理成本</h1><p>了解如何在使用 Claude Code 时跟踪和优化令牌使用量和成本。</p><p>Claude Code 每次交互都会消耗令牌。平均成本为每个开发者每天 6 美元，90% 的用户每日成本保持在 12 美元以下。</p><p>对于团队使用，Claude Code 按 API 令牌消耗量收费。平均而言，使用 Sonnet 4 的 Claude Code 每个开发者每月成本约为 100-200 美元，但根据用户运行的实例数量以及是否在自动化中使用，存在很大差异。</p><h2 id="跟踪您的成本"><a class="markdownIt-Anchor" href="#跟踪您的成本"></a> 跟踪您的成本</h2><ul><li><p>使用 <code>/cost</code> 查看当前会话使用量</p></li><li><p><strong>Anthropic Console 用户</strong>：</p><ul><li><p>在 Anthropic Console 中检查<a href="https://support.anthropic.com/en/articles/9534590-cost-and-usage-reporting-in-console"><strong>历史使用量</strong></a>（需要管理员或计费角色）</p></li><li><p>为 Claude Code 工作区设置<a href="https://support.anthropic.com/en/articles/9796807-creating-and-managing-workspaces"><strong>工作区支出限制</strong></a>（需要管理员角色）</p></li></ul></li><li><p><strong>Pro 和 Max 计划用户</strong>：使用量包含在您的订阅中</p></li></ul><h2 id="为团队管理成本"><a class="markdownIt-Anchor" href="#为团队管理成本"></a> 为团队管理成本</h2><p>使用 Anthropic API 时，您可以限制 Claude Code 工作区的总支出。要配置，请<a href="https://support.anthropic.com/en/articles/9796807-creating-and-managing-workspaces"><strong>按照这些说明操作</strong></a>。管理员可以通过<a href="https://support.anthropic.com/en/articles/9534590-cost-and-usage-reporting-in-console"><strong>按照这些说明操作</strong></a>查看成本和使用量报告。</p><p>在 Bedrock 和 Vertex 上，Claude Code 不会从您的云端发送指标。为了获取成本指标，几家大型企业报告使用了 <a href="https://docs.anthropic.com/zh-CN/docs/claude-code/bedrock-vertex-proxies#litellm"><strong>LiteLLM</strong></a>，这是一个开源工具，帮助公司<a href="https://docs.litellm.ai/docs/proxy/virtual_keys#tracking-spend"><strong>按密钥跟踪支出</strong></a>。该项目与 Anthropic 无关，我们也未审核其安全性。</p><h2 id="减少令牌使用量"><a class="markdownIt-Anchor" href="#减少令牌使用量"></a> 减少令牌使用量</h2><ul><li><p><strong>紧凑对话：</strong></p><ul><li><p>Claude 默认在上下文超过 95% 容量时使用自动紧凑</p></li><li><p>切换自动紧凑：运行 <code>/config</code> 并导航到”Auto-compact enabled”</p></li><li><p>当上下文变大时手动使用 <code>/compact</code></p></li><li><p>添加自定义指令：<code>/compact Focus on code samples and API usage</code></p></li><li><p>通过添加到 <a href="http://CLAUDE.md">CLAUDE.md</a> 来自定义紧凑：</p></li></ul></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Summary instructions</span></span><br><span class="line"></span><br><span class="line">When you are using compact, please focus on test output and code changes</span><br></pre></td></tr></table></figure><ul><li><p><strong>编写具体查询：</strong> 避免触发不必要扫描的模糊请求</p></li><li><p><strong>分解复杂任务：</strong> 将大型任务拆分为专注的交互</p></li><li><p><strong>在任务之间清除历史：</strong> 使用 <code>/clear</code> 重置上下文</p></li></ul><p>成本可能因以下因素而显著变化：</p><ul><li><p>被分析代码库的大小</p></li><li><p>查询的复杂性</p></li><li><p>被搜索或修改的文件数量</p></li><li><p>对话历史的长度</p></li><li><p>紧凑对话的频率</p></li><li><p>后台进程（俳句生成、对话摘要）</p></li></ul><h2 id="后台令牌使用量"><a class="markdownIt-Anchor" href="#后台令牌使用量"></a> 后台令牌使用量</h2><p>Claude Code 即使在空闲时也会为某些后台功能使用令牌：</p><ul><li><p><strong>俳句生成</strong>：您输入时出现的小型创意消息（大约每天 1 分钱）</p></li><li><p><strong>对话摘要</strong>：为 <code>claude --resume</code> 功能摘要之前对话的后台作业</p></li><li><p><strong>命令处理</strong>：某些命令如 <code>/cost</code> 可能生成请求来检查状态</p></li></ul><p>这些后台进程即使没有主动交互也会消耗少量令牌（通常每个会话低于 0.04 美元）。</p><h1 id="分析"><a class="markdownIt-Anchor" href="#分析"></a> 分析</h1><p>查看您组织的Claude Code部署的详细使用洞察和生产力指标。</p><p>Claude Code提供了一个分析仪表板，帮助组织了解开发者使用模式，跟踪生产力指标，并优化他们的Claude Code采用情况。</p><p>分析功能目前仅适用于通过Anthropic控制台使用Anthropic API的Claude Code组织。</p><h2 id="访问分析"><a class="markdownIt-Anchor" href="#访问分析"></a> 访问分析</h2><p>导航到分析仪表板：<a href="https://console.anthropic.com/claude_code"><strong>console.anthropic.com/claude_code</strong></a>。</p><h3 id="所需角色"><a class="markdownIt-Anchor" href="#所需角色"></a> 所需角色</h3><ul><li><p><strong>主要所有者</strong></p></li><li><p><strong>所有者</strong></p></li><li><p><strong>计费</strong></p></li><li><p><strong>管理员</strong></p></li><li><p><strong>开发者</strong></p></li></ul><p>具有<strong>用户</strong>、<strong>Claude Code用户</strong>或<strong>成员管理员</strong>角色的用户无法访问分析。</p><h2 id="可用指标"><a class="markdownIt-Anchor" href="#可用指标"></a> 可用指标</h2><h3 id="接受的代码行数"><a class="markdownIt-Anchor" href="#接受的代码行数"></a> 接受的代码行数</h3><p>用户在会话中接受的由Claude Code编写的代码总行数。</p><ul><li><p>排除被拒绝的代码建议</p></li><li><p>不跟踪后续删除</p></li></ul><h3 id="建议接受率"><a class="markdownIt-Anchor" href="#建议接受率"></a> 建议接受率</h3><p>用户接受代码编辑工具使用的百分比，包括：</p><ul><li><p>编辑</p></li><li><p>多重编辑</p></li><li><p>写入</p></li><li><p>笔记本编辑</p></li></ul><h3 id="活动"><a class="markdownIt-Anchor" href="#活动"></a> 活动</h3><p><strong>用户</strong>：给定日期的活跃用户数量（左侧Y轴上的数字）</p><p><strong>会话</strong>：给定日期的活跃会话数量（右侧Y轴上的数字）</p><h3 id="支出"><a class="markdownIt-Anchor" href="#支出"></a> 支出</h3><p><strong>用户</strong>：给定日期的活跃用户数量（左侧Y轴上的数字）</p><p><strong>支出</strong>：给定日期的总支出美元（右侧Y轴上的数字）</p><h1 id="claude-code-设置"><a class="markdownIt-Anchor" href="#claude-code-设置"></a> Claude Code 设置</h1><p>使用全局和项目级设置以及环境变量配置 Claude Code。</p><p>Claude Code 提供多种设置来配置其行为以满足您的需求。您可以通过在使用交互式 REPL 时运行 <code>/config</code> 命令来配置 Claude Code。</p><h2 id="设置文件"><a class="markdownIt-Anchor" href="#设置文件"></a> 设置文件</h2><p><code>settings.json</code> 文件是我们通过分层设置配置 Claude Code 的官方机制：</p><ul><li><p><strong>用户设置</strong> 在 <code>~/.claude/settings.json</code> 中定义，适用于所有项目。</p></li><li><p><strong>项目设置</strong> 保存在您的项目目录中：</p><ul><li><p><code>.claude/settings.json</code> 用于检入源代码控制并与团队共享的设置</p></li><li><p><code>.claude/settings.local.json</code> 用于不检入的设置，适用于个人偏好和实验。Claude Code 会在创建时配置 git 忽略 <code>.claude/settings.local.json</code>。</p></li></ul></li><li><p>对于 Claude Code 的企业部署，我们还支持<strong>企业管理策略设置</strong>。这些设置优先于用户和项目设置。系统管理员可以在 macOS 上将策略部署到 <code>/Library/Application Support/ClaudeCode/managed-settings.json</code>，在 Linux 和通过 WSL 的 Windows 上部署到 <code>/etc/claude-code/managed-settings.json</code>。</p></li></ul><p>Example settings.json</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;permissions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;allow&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="string">&quot;Bash(npm run lint)&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;Bash(npm run test:*)&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;Read(~/.zshrc)&quot;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;deny&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="string">&quot;Bash(curl:*)&quot;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;env&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;CLAUDE_CODE_ENABLE_TELEMETRY&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;OTEL_METRICS_EXPORTER&quot;</span><span class="punctuation">:</span> <span class="string">&quot;otlp&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="可用设置"><a class="markdownIt-Anchor" href="#可用设置"></a> 可用设置</h3><p><code>settings.json</code> 支持多个选项：</p><table><thead><tr><th><strong>键</strong></th><th><strong>描述</strong></th><th><strong>示例</strong></th></tr></thead><tbody><tr><td><code>apiKeyHelper</code></td><td>自定义脚本，在 <code>/bin/sh</code> 中执行，用于生成认证值。此值通常作为模型请求的 <code>X-Api-Key</code>、<code>Authorization: Bearer</code> 和 <code>Proxy-Authorization: Bearer</code> 头发送</td><td><code>/bin/generate_temp_api_key.sh</code></td></tr><tr><td><code>cleanupPeriodDays</code></td><td>本地保留聊天记录的时间长度（默认：30 天）</td><td><code>20</code></td></tr><tr><td><code>env</code></td><td>将应用于每个会话的环境变量</td><td><code>&#123;&quot;FOO&quot;: &quot;bar&quot;&#125;</code></td></tr><tr><td><code>includeCoAuthoredBy</code></td><td>是否在 git 提交和拉取请求中包含 <code>co-authored-by Claude</code> 署名（默认：<code>true</code>）</td><td><code>false</code></td></tr><tr><td><code>permissions</code></td><td>权限结构见下表。</td><td></td></tr></tbody></table><h3 id="权限设置"><a class="markdownIt-Anchor" href="#权限设置"></a> 权限设置</h3><table><thead><tr><th><strong>键</strong></th><th><strong>描述</strong></th><th><strong>示例</strong></th></tr></thead><tbody><tr><td><code>allow</code></td><td>允许工具使用的<a href="https://docs.anthropic.com/zh-CN/docs/claude-code/iam#configuring-permissions"><strong>权限规则</strong></a>数组</td><td><code>[ &quot;Bash(git diff:*)&quot; ]</code></td></tr><tr><td><code>deny</code></td><td>拒绝工具使用的<a href="https://docs.anthropic.com/zh-CN/docs/claude-code/iam#configuring-permissions"><strong>权限规则</strong></a>数组</td><td><code>[ &quot;WebFetch&quot;, &quot;Bash(curl:*)&quot; ]</code></td></tr><tr><td><code>additionalDirectories</code></td><td>Claude 可以访问的额外<a href="https://docs.anthropic.com/zh-CN/docs/claude-code/iam#working-directories"><strong>工作目录</strong></a></td><td><code>[ &quot;../docs/&quot; ]</code></td></tr><tr><td><code>defaultMode</code></td><td>打开 Claude Code 时的默认<a href="https://docs.anthropic.com/zh-CN/docs/claude-code/iam#permission-modes"><strong>权限模式</strong></a></td><td><code>&quot;allowEdits&quot;</code></td></tr><tr><td><code>disableBypassPermissionsMode</code></td><td>设置为 <code>&quot;disable&quot;</code> 以防止激活 <code>bypassPermissions</code> 模式。参见<a href="https://docs.anthropic.com/zh-CN/docs/claude-code/iam#enterprise-managed-policy-settings"><strong>管理策略设置</strong></a></td><td><code>&quot;disable&quot;</code></td></tr></tbody></table><h3 id="设置优先级-2"><a class="markdownIt-Anchor" href="#设置优先级-2"></a> 设置优先级</h3><p>设置按优先级顺序应用：</p><ol><li><p>企业策略（参见 <a href="https://docs.anthropic.com/zh-CN/docs/claude-code/iam#enterprise-managed-policy-settings"><strong>IAM 文档</strong></a>）</p></li><li><p>命令行参数</p></li><li><p>本地项目设置</p></li><li><p>共享项目设置</p></li><li><p>用户设置</p></li></ol><h2 id="环境变量"><a class="markdownIt-Anchor" href="#环境变量"></a> 环境变量</h2><p>Claude Code 支持以下环境变量来控制其行为：</p><p>所有环境变量也可以在 <a href="https://docs.anthropic.com/zh-CN/docs/claude-code/settings#available-settings"><code>**settings.json**</code></a> 中配置。这作为为每个会话自动设置环境变量的方式很有用，或者为整个团队或组织推出一组环境变量。</p><table><thead><tr><th><strong>变量</strong></th><th><strong>目的</strong></th></tr></thead><tbody><tr><td><code>ANTHROPIC_API_KEY</code></td><td>作为 <code>X-Api-Key</code> 头发送的 API 密钥，通常用于 Claude SDK（对于交互式使用，运行 <code>/login</code>）</td></tr><tr><td><code>ANTHROPIC_AUTH_TOKEN</code></td><td><code>Authorization</code> 和 <code>Proxy-Authorization</code> 头的自定义值（您在此处设置的值将以 <code>Bearer</code> 为前缀）</td></tr><tr><td><code>ANTHROPIC_CUSTOM_HEADERS</code></td><td>您想要添加到请求中的自定义头（以 <code>Name: Value</code> 格式）</td></tr><tr><td><code>ANTHROPIC_MODEL</code></td><td>要使用的自定义模型名称（参见<a href="https://docs.anthropic.com/zh-CN/docs/claude-code/bedrock-vertex-proxies#model-configuration"><strong>模型配置</strong></a>）</td></tr><tr><td><code>ANTHROPIC_SMALL_FAST_MODEL</code></td><td>用于后台任务的 <a href="https://docs.anthropic.com/zh-CN/docs/claude-code/costs"><strong>Haiku 类模型</strong></a>名称</td></tr><tr><td><code>BASH_DEFAULT_TIMEOUT_MS</code></td><td>长时间运行的 bash 命令的默认超时时间</td></tr><tr><td><code>BASH_MAX_TIMEOUT_MS</code></td><td>模型可以为长时间运行的 bash 命令设置的最大超时时间</td></tr><tr><td><code>BASH_MAX_OUTPUT_LENGTH</code></td><td>bash 输出在中间截断之前的最大字符数</td></tr><tr><td><code>CLAUDE_BASH_MAINTAIN_PROJECT_WORKING_DIR</code></td><td>在每个 Bash 命令后返回到原始工作目录</td></tr><tr><td><code>CLAUDE_CODE_API_KEY_HELPER_TTL_MS</code></td><td>凭据应刷新的间隔时间（以毫秒为单位）（使用 <code>apiKeyHelper</code> 时）</td></tr><tr><td><code>CLAUDE_CODE_MAX_OUTPUT_TOKENS</code></td><td>为大多数请求设置最大输出令牌数</td></tr><tr><td><code>CLAUDE_CODE_USE_BEDROCK</code></td><td>使用 Bedrock（参见 <a href="https://docs.anthropic.com/zh-CN/docs/claude-code/bedrock-vertex-proxies"><strong>Bedrock &amp; Vertex</strong></a>）</td></tr><tr><td><code>CLAUDE_CODE_USE_VERTEX</code></td><td>使用 Vertex（参见 <a href="https://docs.anthropic.com/zh-CN/docs/claude-code/bedrock-vertex-proxies"><strong>Bedrock &amp; Vertex</strong></a>）</td></tr><tr><td><code>CLAUDE_CODE_SKIP_BEDROCK_AUTH</code></td><td>跳过 Bedrock 的 AWS 认证（例如使用 LLM 网关时）</td></tr><tr><td><code>CLAUDE_CODE_SKIP_VERTEX_AUTH</code></td><td>跳过 Vertex 的 Google 认证（例如使用 LLM 网关时）</td></tr><tr><td><code>CLAUDE_CODE_DISABLE_NONESSENTIAL_TRAFFIC</code></td><td>等同于设置 <code>DISABLE_AUTOUPDATER</code>、<code>DISABLE_BUG_COMMAND</code>、<code>DISABLE_ERROR_REPORTING</code> 和 <code>DISABLE_TELEMETRY</code></td></tr><tr><td><code>DISABLE_AUTOUPDATER</code></td><td>设置为 <code>1</code> 以禁用自动更新器</td></tr><tr><td><code>DISABLE_BUG_COMMAND</code></td><td>设置为 <code>1</code> 以禁用 <code>/bug</code> 命令</td></tr><tr><td><code>DISABLE_COST_WARNINGS</code></td><td>设置为 <code>1</code> 以禁用成本警告消息</td></tr><tr><td><code>DISABLE_ERROR_REPORTING</code></td><td>设置为 <code>1</code> 以选择退出 Sentry 错误报告</td></tr><tr><td><code>DISABLE_NON_ESSENTIAL_MODEL_CALLS</code></td><td>设置为 <code>1</code> 以禁用非关键路径的模型调用，如风味文本</td></tr><tr><td><code>DISABLE_TELEMETRY</code></td><td>设置为 <code>1</code> 以选择退出 Statsig 遥测（注意 Statsig 事件不包括用户数据，如代码、文件路径或 bash 命令）</td></tr><tr><td><code>HTTP_PROXY</code></td><td>为网络连接指定 HTTP 代理服务器</td></tr><tr><td><code>HTTPS_PROXY</code></td><td>为网络连接指定 HTTPS 代理服务器</td></tr><tr><td><code>MAX_THINKING_TOKENS</code></td><td>为模型预算强制思考</td></tr><tr><td><code>MCP_TIMEOUT</code></td><td>MCP 服务器启动的超时时间（以毫秒为单位）</td></tr><tr><td><code>MCP_TOOL_TIMEOUT</code></td><td>MCP 工具执行的超时时间（以毫秒为单位）</td></tr><tr><td><code>MAX_MCP_OUTPUT_TOKENS</code></td><td>MCP 工具响应中允许的最大令牌数（默认：25000）</td></tr></tbody></table><h2 id="配置选项"><a class="markdownIt-Anchor" href="#配置选项"></a> 配置选项</h2><p>我们正在将全局配置迁移到 <code>settings.json</code>。</p><p><code>claude config</code> 将被弃用，取而代之的是 <a href="https://docs.anthropic.com/zh-CN/docs/claude-code/settings#settings-files"><strong>settings.json</strong></a></p><p>要管理您的配置，请使用以下命令：</p><ul><li><p>列出设置：<code>claude config list</code></p></li><li><p>查看设置：<code>claude config get &lt;key&gt;</code></p></li><li><p>更改设置：<code>claude config set &lt;key&gt; &lt;value&gt;</code></p></li><li><p>推送到设置（对于列表）：<code>claude config add &lt;key&gt; &lt;value&gt;</code></p></li><li><p>从设置中移除（对于列表）：<code>claude config remove &lt;key&gt; &lt;value&gt;</code></p></li></ul><p>默认情况下，<code>config</code> 更改您的项目配置。要管理您的全局配置，请使用 <code>--global</code>（或 <code>-g</code>）标志。</p><h3 id="全局配置"><a class="markdownIt-Anchor" href="#全局配置"></a> 全局配置</h3><p>要设置全局配置，请使用 <code>claude config set -g &lt;key&gt; &lt;value&gt;</code>：</p><table><thead><tr><th><strong>键</strong></th><th><strong>描述</strong></th><th><strong>示例</strong></th></tr></thead><tbody><tr><td><code>autoUpdates</code></td><td>是否启用自动更新（默认：<code>true</code>）</td><td><code>false</code></td></tr><tr><td><code>preferredNotifChannel</code></td><td>您希望接收通知的位置（默认：<code>iterm2</code>）</td><td><code>iterm2</code>、<code>iterm2_with_bell</code>、<code>terminal_bell</code> 或 <code>notifications_disabled</code></td></tr><tr><td><code>theme</code></td><td>颜色主题</td><td><code>dark</code>、<code>light</code>、<code>light-daltonized</code> 或 <code>dark-daltonized</code></td></tr><tr><td><code>verbose</code></td><td>是否显示完整的 bash 和命令输出（默认：<code>false</code>）</td><td><code>true</code></td></tr></tbody></table><h2 id="claude-可用的工具"><a class="markdownIt-Anchor" href="#claude-可用的工具"></a> Claude 可用的工具</h2><p>Claude Code 可以访问一组强大的工具，帮助它理解和修改您的代码库：</p><table><thead><tr><th><strong>工具</strong></th><th><strong>描述</strong></th><th><strong>需要权限</strong></th></tr></thead><tbody><tr><td><strong>Agent</strong></td><td>运行子代理来处理复杂的多步骤任务</td><td>否</td></tr><tr><td><strong>Bash</strong></td><td>在您的环境中执行 shell 命令</td><td>是</td></tr><tr><td><strong>Edit</strong></td><td>对特定文件进行有针对性的编辑</td><td>是</td></tr><tr><td><strong>Glob</strong></td><td>基于模式匹配查找文件</td><td>否</td></tr><tr><td><strong>Grep</strong></td><td>在文件内容中搜索模式</td><td>否</td></tr><tr><td><strong>LS</strong></td><td>列出文件和目录</td><td>否</td></tr><tr><td><strong>MultiEdit</strong></td><td>对单个文件原子性地执行多个编辑</td><td>是</td></tr><tr><td><strong>NotebookEdit</strong></td><td>修改 Jupyter notebook 单元格</td><td>是</td></tr><tr><td><strong>NotebookRead</strong></td><td>读取和显示 Jupyter notebook 内容</td><td>否</td></tr><tr><td><strong>Read</strong></td><td>读取文件内容</td><td>否</td></tr><tr><td><strong>TodoRead</strong></td><td>读取当前会话的任务列表</td><td>否</td></tr><tr><td><strong>TodoWrite</strong></td><td>创建和管理结构化任务列表</td><td>否</td></tr><tr><td><strong>WebFetch</strong></td><td>从指定 URL 获取内容</td><td>是</td></tr><tr><td><strong>WebSearch</strong></td><td>执行带域名过滤的网络搜索</td><td>是</td></tr><tr><td><strong>Write</strong></td><td>创建或覆盖文件</td><td>是</td></tr></tbody></table><p>权限规则可以使用 <code>/allowed-tools</code> 或在<a href="https://docs.anthropic.com/zh-CN/docs/claude-code/settings#available-settings"><strong>权限设置</strong></a>中配置。</p><h3 id="使用钩子扩展工具"><a class="markdownIt-Anchor" href="#使用钩子扩展工具"></a> 使用钩子扩展工具</h3><p>您可以使用 <a href="https://docs.anthropic.com/zh-CN/docs/claude-code/hooks"><strong>Claude Code 钩子</strong></a>在任何工具执行之前或之后运行自定义命令。</p><p>例如，您可以在 Claude 修改 Python 文件后自动运行 Python 格式化程序，或者通过阻止对某些路径的写入操作来防止修改生产配置文件。</p><h2 id="另请参阅"><a class="markdownIt-Anchor" href="#另请参阅"></a> 另请参阅</h2><ul><li><p><a href="https://docs.anthropic.com/zh-CN/docs/claude-code/iam#configuring-permissions"><strong>身份和访问管理</strong></a> - 了解 Claude Code 的权限系统</p></li><li><p><a href="https://docs.anthropic.com/zh-CN/docs/claude-code/iam#enterprise-managed-policy-settings"><strong>IAM 和访问控制</strong></a> - 企业策略管理</p></li><li><p><a href="https://docs.anthropic.com/zh-CN/docs/claude-code/troubleshooting#auto-updater-issues"><strong>故障排除</strong></a> - 常见配置问题的解决方案</p></li></ul><h1 id="将-claude-code-添加到您的-ide"><a class="markdownIt-Anchor" href="#将-claude-code-添加到您的-ide"></a> 将 Claude Code 添加到您的 IDE</h1><p>了解如何将 Claude Code 添加到您喜爱的 IDE</p><p>Claude Code 与流行的集成开发环境 (IDE) 无缝集成，以增强您的编码工作流程。这种集成允许您直接在您首选的开发环境中利用 Claude 的功能。</p><h2 id="支持的-ide"><a class="markdownIt-Anchor" href="#支持的-ide"></a> 支持的 IDE</h2><p>Claude Code 目前支持两个主要的 IDE 系列：</p><ul><li><p><strong>Visual Studio Code</strong>（包括 Cursor 和 Windsurf 等流行分支）</p></li><li><p><strong>JetBrains IDEs</strong>（包括 PyCharm、WebStorm、IntelliJ 和 GoLand）</p></li></ul><h2 id="功能"><a class="markdownIt-Anchor" href="#功能"></a> 功能</h2><ul><li><p><strong>快速启动</strong>：使用 <code>Cmd+Esc</code>（Mac）或 <code>Ctrl+Esc</code>（Windows/Linux）直接从编辑器打开 Claude Code，或点击 UI 中的 Claude Code 按钮</p></li><li><p><strong>差异查看</strong>：代码更改可以直接在 IDE 差异查看器中显示，而不是在终端中。您可以在 <code>/config</code> 中配置此功能</p></li><li><p><strong>选择上下文</strong>：IDE 中的当前选择/标签页会自动与 Claude Code 共享</p></li><li><p><strong>文件引用快捷键</strong>：使用 <code>Cmd+Option+K</code>（Mac）或 <code>Alt+Ctrl+K</code>（Linux/Windows）插入文件引用（例如，@File#L1-99）</p></li><li><p><strong>诊断共享</strong>：IDE 中的诊断错误（lint、语法等）会在您工作时自动与 Claude 共享</p></li></ul><h2 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h2><h3 id="vs-code"><a class="markdownIt-Anchor" href="#vs-code"></a> VS Code</h3><ol><li><p>打开 VSCode</p></li><li><p>打开集成终端</p></li><li><p>运行 <code>claude</code> - 扩展将自动安装</p></li></ol><p>今后您也可以在任何外部终端中使用 <code>/ide</code> 命令连接到 IDE。</p><p>这些安装说明也适用于 VS Code 分支，如 Cursor 和 Windsurf。</p><h3 id="jetbrains-ides"><a class="markdownIt-Anchor" href="#jetbrains-ides"></a> JetBrains IDEs</h3><p>从市场安装 <a href="https://docs.anthropic.com/s/claude-code-jetbrains"><strong>Claude Code 插件</strong></a> 并重启您的 IDE。</p><p>当您在集成终端中运行 <code>claude</code> 时，插件也可能会自动安装。必须完全重启 IDE 才能生效。</p><p><strong>远程开发限制</strong>：使用 JetBrains 远程开发时，您必须通过 <code>Settings &gt; Plugin (Host)</code> 在远程主机中安装插件。</p><h2 id="配置"><a class="markdownIt-Anchor" href="#配置"></a> 配置</h2><p>两种集成都与 Claude Code 的配置系统兼容。要启用 IDE 特定功能：</p><ol><li><p>通过在内置终端中运行 <code>claude</code> 将 Claude Code 连接到您的 IDE</p></li><li><p>运行 <code>/config</code> 命令</p></li><li><p>将差异工具设置为 <code>auto</code> 以进行自动 IDE 检测</p></li><li><p>Claude Code 将根据您的 IDE 自动使用适当的查看器</p></li></ol><p>如果您使用外部终端（而不是 IDE 的内置终端），您仍然可以在启动 Claude Code 后使用 <code>/ide</code> 命令连接到您的 IDE。这允许您即使从单独的终端应用程序运行 Claude 时也能受益于 IDE 集成功能。这适用于 VS Code 和 JetBrains IDEs。</p><p>使用外部终端时，为确保 Claude 默认访问与您的 IDE 相同的文件，请从与您的 IDE 项目根目录相同的目录启动 Claude。</p><h2 id="故障排除-3"><a class="markdownIt-Anchor" href="#故障排除-3"></a> 故障排除</h2><h3 id="vs-code-扩展未安装"><a class="markdownIt-Anchor" href="#vs-code-扩展未安装"></a> VS Code 扩展未安装</h3><ul><li><p>确保您从 VS Code 的集成终端运行 Claude Code</p></li><li><p>确保安装了与您的 IDE 对应的 CLI：</p><ul><li><p>对于 VS Code：<code>code</code> 命令应该可用</p></li><li><p>对于 Cursor：<code>cursor</code> 命令应该可用</p></li><li><p>对于 Windsurf：<code>windsurf</code> 命令应该可用</p></li><li><p>如果未安装，使用 <code>Cmd+Shift+P</code>（Mac）或 <code>Ctrl+Shift+P</code>（Windows/Linux）并搜索”Shell Command: Install ‘code’ command in PATH”（或您的 IDE 的等效命令）</p></li></ul></li><li><p>检查 VS Code 是否有安装扩展的权限</p></li></ul><h3 id="jetbrains-插件不工作"><a class="markdownIt-Anchor" href="#jetbrains-插件不工作"></a> JetBrains 插件不工作</h3><ul><li><p>确保您从项目根目录运行 Claude Code</p></li><li><p>检查 JetBrains 插件是否在 IDE 设置中启用</p></li><li><p>完全重启 IDE。您可能需要多次执行此操作</p></li><li><p>对于 JetBrains 远程开发，确保 Claude Code 插件安装在远程主机中，而不是本地客户端上</p></li></ul><p>如需更多帮助，请参考我们的<a href="https://docs.anthropic.com/zh-CN/docs/claude-code/troubleshooting"><strong>故障排除指南</strong></a>或联系支持。</p><h1 id="优化您的终端设置-2"><a class="markdownIt-Anchor" href="#优化您的终端设置-2"></a> 优化您的终端设置</h1><p>Claude Code在终端正确配置时效果最佳。遵循这些指南来优化您的体验。</p><h3 id="主题和外观-2"><a class="markdownIt-Anchor" href="#主题和外观-2"></a> 主题和外观</h3><p>Claude无法控制您终端的主题。这由您的终端应用程序处理。您可以随时通过<code>/config</code>命令将Claude Code的主题与您的终端匹配。</p><h3 id="换行-2"><a class="markdownIt-Anchor" href="#换行-2"></a> 换行</h3><p>您有几种选项可以在Claude Code中输入换行符：</p><ul><li><p><strong>快速转义</strong>：输入<code>\</code>然后按Enter键创建新行</p></li><li><p><strong>键盘快捷键</strong>：设置键绑定来插入新行</p></li></ul><h4 id="设置shiftentervs-code或iterm2"><a class="markdownIt-Anchor" href="#设置shiftentervs-code或iterm2"></a> 设置Shift+Enter（VS Code或iTerm2）：</h4><p>在Claude Code中运行<code>/terminal-setup</code>来自动配置Shift+Enter。</p><h4 id="设置optionentervs-code-iterm2或macos-terminalapp"><a class="markdownIt-Anchor" href="#设置optionentervs-code-iterm2或macos-terminalapp"></a> 设置Option+Enter（VS Code、iTerm2或macOS Terminal.app）：</h4><p><strong>对于Mac Terminal.app：</strong></p><ol><li><p>打开设置 → 配置文件 → 键盘</p></li><li><p>勾选”使用Option作为Meta键”</p></li></ol><p><strong>对于iTerm2和VS Code终端：</strong></p><ol><li><p>打开设置 → 配置文件 → 键</p></li><li><p>在常规下，将左/右Option键设置为”Esc+“</p></li></ol><h3 id="通知设置-2"><a class="markdownIt-Anchor" href="#通知设置-2"></a> 通知设置</h3><p>通过正确的通知配置，永远不会错过Claude完成任务的时机：</p><h4 id="终端铃声通知-2"><a class="markdownIt-Anchor" href="#终端铃声通知-2"></a> 终端铃声通知</h4><p>在任务完成时启用声音警报：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">claude config <span class="built_in">set</span> --global preferredNotifChannel terminal_bell</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>对于macOS用户</strong>：不要忘记在系统设置 → 通知 → [您的终端应用]中启用通知权限。</p><h4 id="iterm-2系统通知"><a class="markdownIt-Anchor" href="#iterm-2系统通知"></a> iTerm 2系统通知</h4><p>对于iTerm 2在任务完成时的警报：</p><ol><li><p>打开iTerm 2偏好设置</p></li><li><p>导航到配置文件 → 终端</p></li><li><p>启用”静音铃声”和过滤警报 → “发送转义序列生成的警报”</p></li><li><p>设置您偏好的通知延迟</p></li></ol><p>请注意，这些通知特定于iTerm 2，在默认的macOS终端中不可用。</p><h4 id="自定义通知钩子"><a class="markdownIt-Anchor" href="#自定义通知钩子"></a> 自定义通知钩子</h4><p>对于高级通知处理，您可以创建<a href="https://docs.anthropic.com/zh-CN/docs/claude-code/hooks#notification"><strong>通知钩子</strong></a>来运行您自己的逻辑。</p><h3 id="处理大型输入-2"><a class="markdownIt-Anchor" href="#处理大型输入-2"></a> 处理大型输入</h3><p>在处理大量代码或长指令时：</p><ul><li><p><strong>避免直接粘贴</strong>：Claude Code可能难以处理非常长的粘贴内容</p></li><li><p><strong>使用基于文件的工作流程</strong>：将内容写入文件并要求Claude读取它</p></li><li><p><strong>注意VS Code限制</strong>：VS Code终端特别容易截断长粘贴</p></li></ul><h3 id="vim模式"><a class="markdownIt-Anchor" href="#vim模式"></a> Vim模式</h3><p>Claude Code支持Vim键绑定的子集，可以通过<code>/vim</code>启用或通过<code>/config</code>配置。</p><p>支持的子集包括：</p><ul><li><p>模式切换：<code>Esc</code>（到NORMAL），<code>i</code>/<code>I</code>，<code>a</code>/<code>A</code>，<code>o</code>/<code>O</code>（到INSERT）</p></li><li><p>导航：<code>h</code>/<code>j</code>/<code>k</code>/<code>l</code>，<code>w</code>/<code>e</code>/<code>b</code>，<code>0</code>/<code>$</code>/<code>^</code>，<code>gg</code>/<code>G</code></p></li><li><p>编辑：<code>x</code>，<code>dw</code>/<code>de</code>/<code>db</code>/<code>dd</code>/<code>D</code>，<code>cw</code>/<code>ce</code>/<code>cb</code>/<code>cc</code>/<code>C</code>，<code>.</code>（重复）</p></li></ul><h1 id="管理-claude-的内存"><a class="markdownIt-Anchor" href="#管理-claude-的内存"></a> 管理 Claude 的内存</h1><p>了解如何使用不同的内存位置和最佳实践来管理 Claude Code 跨会话的内存。</p><p>Claude Code 可以跨会话记住您的偏好设置，比如样式指南和工作流程中的常用命令。</p><h2 id="确定内存类型"><a class="markdownIt-Anchor" href="#确定内存类型"></a> 确定内存类型</h2><p>Claude Code 提供三种内存位置，每种都有不同的用途：</p><table><thead><tr><th><strong>内存类型</strong></th><th><strong>位置</strong></th><th><strong>用途</strong></th><th><strong>使用案例示例</strong></th></tr></thead><tbody><tr><td><strong>项目内存</strong></td><td><code>./CLAUDE.md</code></td><td>项目的团队共享指令</td><td>项目架构、编码标准、常见工作流程</td></tr><tr><td><strong>用户内存</strong></td><td><code>~/.claude/CLAUDE.md</code></td><td>所有项目的个人偏好设置</td><td>代码样式偏好、个人工具快捷方式</td></tr><tr><td><strong>项目内存（本地）</strong></td><td><code>./CLAUDE.local.md</code></td><td>个人项目特定偏好设置</td><td><em>（已弃用，见下文）</em> 您的沙盒 URL、首选测试数据</td></tr></tbody></table><p>所有内存文件在启动 Claude Code 时都会自动加载到上下文中。</p><h2 id="claudemd"><a class="markdownIt-Anchor" href="#claudemd"></a> <a href="http://CLAUDE.md">CLAUDE.md</a> 导入</h2><p><a href="http://CLAUDE.md">CLAUDE.md</a> 文件可以使用 <code>@path/to/import</code> 语法导入其他文件。以下示例导入了 3 个文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">查看 @README 了解项目概述，查看 @package.json 了解此项目可用的 npm 命令。</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">附加说明</span></span><br><span class="line">- git 工作流程 @docs/git-instructions.md</span><br></pre></td></tr></table></figure><p>相对路径和绝对路径都是允许的。特别是，导入用户主目录中的文件是让团队成员提供不会检入存储库的个人指令的便捷方式。以前 <a href="http://CLAUDE.local.md">CLAUDE.local.md</a> 有类似的用途，但现在已弃用，改用导入功能，因为它们在多个 git 工作树中工作得更好。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">个人偏好设置</span></span><br><span class="line">- @~/.claude/my-project-instructions.md</span><br></pre></td></tr></table></figure><p>为了避免潜在的冲突，导入不会在 markdown 代码段和代码块内进行评估。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">此代码段不会被视为导入：`@anthropic-ai/claude-code`</span><br></pre></td></tr></table></figure><p>导入的文件可以递归导入其他文件，最大深度为 5 跳。您可以通过运行 <code>/memory</code> 命令查看加载了哪些内存文件。</p><h2 id="claude-如何查找内存"><a class="markdownIt-Anchor" href="#claude-如何查找内存"></a> Claude 如何查找内存</h2><p>Claude Code 递归读取内存：从当前工作目录开始，Claude Code 向上递归到（但不包括）根目录 <em>/</em> 并读取它找到的任何 <a href="http://CLAUDE.md">CLAUDE.md</a> 或 <a href="http://CLAUDE.local.md">CLAUDE.local.md</a> 文件。这在大型存储库中工作时特别方便，您在 <em>foo/bar/</em> 中运行 Claude Code，并且在 <em>foo/CLAUDE.md</em> 和 <em>foo/bar/CLAUDE.md</em> 中都有内存。</p><p>Claude 还会发现嵌套在当前工作目录下子树中的 <a href="http://CLAUDE.md">CLAUDE.md</a>。它们不会在启动时加载，只有当 Claude 读取这些子树中的文件时才会包含。</p><h2 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h2><h2 id="快捷方式快速添加内存"><a class="markdownIt-Anchor" href="#快捷方式快速添加内存"></a> <code>**#**</code> 快捷方式快速添加内存</h2><p>添加内存的最快方法是在输入开头使用 <code>#</code> 字符：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">始终使用描述性变量名</span></span><br></pre></td></tr></table></figure><p>系统会提示您选择要将此内容存储在哪个内存文件中。</p><h2 id="使用-2"><a class="markdownIt-Anchor" href="#使用-2"></a> 使用</h2><h2 id="memory-直接编辑内存"><a class="markdownIt-Anchor" href="#memory-直接编辑内存"></a> <code>**/memory**</code> 直接编辑内存</h2><p>在会话期间使用 <code>/memory</code> 斜杠命令在系统编辑器中打开任何内存文件，以进行更广泛的添加或组织。</p><h2 id="设置项目内存"><a class="markdownIt-Anchor" href="#设置项目内存"></a> 设置项目内存</h2><p>假设您想要设置一个 <a href="http://CLAUDE.md">CLAUDE.md</a> 文件来存储重要的项目信息、约定和常用命令。</p><p>使用以下命令为您的代码库引导一个 <a href="http://CLAUDE.md">CLAUDE.md</a>：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">/init</span></span><br></pre></td></tr></table></figure><p>提示：</p><ul><li><p>包含常用命令（构建、测试、代码检查）以避免重复搜索</p></li><li><p>记录代码样式偏好和命名约定</p></li><li><p>添加项目特定的重要架构模式</p></li><li><p><a href="http://CLAUDE.md">CLAUDE.md</a> 内存可用于与团队共享的指令和您的个人偏好设置。</p></li></ul><h2 id="内存最佳实践"><a class="markdownIt-Anchor" href="#内存最佳实践"></a> 内存最佳实践</h2><ul><li><p><strong>要具体</strong>：“使用 2 空格缩进”比”正确格式化代码”更好。</p></li><li><p><strong>使用结构来组织</strong>：将每个单独的内存格式化为项目符号，并在描述性 markdown 标题下对相关内存进行分组。</p></li><li><p><strong>定期审查</strong>：随着项目的发展更新内存，以确保 Claude 始终使用最新的信息和上下文。</p></li></ul><h1 id="cli-参考"><a class="markdownIt-Anchor" href="#cli-参考"></a> CLI 参考</h1><p>Claude Code 命令行界面的完整参考，包括命令和标志。</p><h2 id="cli-命令"><a class="markdownIt-Anchor" href="#cli-命令"></a> CLI 命令</h2><table><thead><tr><th><strong>命令</strong></th><th><strong>描述</strong></th><th><strong>示例</strong></th></tr></thead><tbody><tr><td><code>claude</code></td><td>启动交互式 REPL</td><td><code>claude</code></td></tr><tr><td><code>claude &quot;query&quot;</code></td><td>使用初始提示启动 REPL</td><td><code>claude &quot;explain this project&quot;</code></td></tr><tr><td><code>claude -p &quot;query&quot;</code></td><td>通过 SDK 查询，然后退出</td><td><code>claude -p &quot;explain this function&quot;</code></td></tr><tr><td><code>cat file | claude -p &quot;query&quot;</code></td><td>处理管道内容</td><td><code>cat logs.txt | claude -p &quot;explain&quot;</code></td></tr><tr><td><code>claude -c</code></td><td>继续最近的对话</td><td><code>claude -c</code></td></tr><tr><td><code>claude -c -p &quot;query&quot;</code></td><td>通过 SDK 继续</td><td><code>claude -c -p &quot;Check for type errors&quot;</code></td></tr><tr><td><code>claude -r &quot;&lt;session-id&gt;&quot; &quot;query&quot;</code></td><td>通过 ID 恢复会话</td><td><code>claude -r &quot;abc123&quot; &quot;Finish this PR&quot;</code></td></tr><tr><td><code>claude update</code></td><td>更新到最新版本</td><td><code>claude update</code></td></tr><tr><td><code>claude mcp</code></td><td>配置模型上下文协议 (MCP) 服务器</td><td>请参阅 <a href="https://docs.anthropic.com/zh-CN/docs/claude-code/mcp"><strong>Claude Code MCP 文档</strong></a>。</td></tr></tbody></table><h2 id="cli-标志"><a class="markdownIt-Anchor" href="#cli-标志"></a> CLI 标志</h2><p>使用这些命令行标志自定义 Claude Code 的行为：</p><table><thead><tr><th><strong>标志</strong></th><th><strong>描述</strong></th><th><strong>示例</strong></th></tr></thead><tbody><tr><td><code>--add-dir</code></td><td>添加额外的工作目录供 Claude 访问（验证每个路径是否作为目录存在）</td><td><code>claude --add-dir ../apps ../lib</code></td></tr><tr><td><code>--allowedTools</code></td><td>除了 <a href="https://docs.anthropic.com/zh-CN/docs/claude-code/settings"><strong>settings.json 文件</strong></a> 之外，应该在不提示用户许可的情况下允许的工具列表</td><td><code>&quot;Bash(git log:*)&quot; &quot;Bash(git diff:*)&quot; &quot;Read&quot;</code></td></tr><tr><td><code>--disallowedTools</code></td><td>除了 <a href="https://docs.anthropic.com/zh-CN/docs/claude-code/settings"><strong>settings.json 文件</strong></a> 之外，应该在不提示用户许可的情况下禁止的工具列表</td><td><code>&quot;Bash(git log:*)&quot; &quot;Bash(git diff:*)&quot; &quot;Edit&quot;</code></td></tr><tr><td><code>--print</code>, <code>-p</code></td><td>打印响应而不使用交互模式（有关编程使用详细信息，请参阅 <a href="https://docs.anthropic.com/zh-CN/docs/claude-code/sdk"><strong>SDK 文档</strong></a>）</td><td><code>claude -p &quot;query&quot;</code></td></tr><tr><td><code>--output-format</code></td><td>指定打印模式的输出格式（选项：<code>text</code>、<code>json</code>、<code>stream-json</code>）</td><td><code>claude -p &quot;query&quot; --output-format json</code></td></tr><tr><td><code>--input-format</code></td><td>指定打印模式的输入格式（选项：<code>text</code>、<code>stream-json</code>）</td><td><code>claude -p --output-format json --input-format stream-json</code></td></tr><tr><td><code>--verbose</code></td><td>启用详细日志记录，显示完整的逐轮输出（在打印和交互模式下都有助于调试）</td><td><code>claude --verbose</code></td></tr><tr><td><code>--max-turns</code></td><td>限制非交互模式下的代理轮数</td><td><code>claude -p --max-turns 3 &quot;query&quot;</code></td></tr><tr><td><code>--model</code></td><td>使用最新模型的别名（<code>sonnet</code> 或 <code>opus</code>）或模型的全名为当前会话设置模型</td><td><code>claude --model claude-sonnet-4-20250514</code></td></tr><tr><td><code>--permission-mode</code></td><td>在指定的 <a href="https://docs.anthropic.com/zh-CN/docs/claude-code/iam#permission-modes"><strong>权限模式</strong></a> 下开始</td><td><code>claude --permission-mode plan</code></td></tr><tr><td><code>--permission-prompt-tool</code></td><td>指定一个 MCP 工具来处理非交互模式下的权限提示</td><td><code>claude -p --permission-prompt-tool mcp_auth_tool &quot;query&quot;</code></td></tr><tr><td><code>--resume</code></td><td>通过 ID 恢复特定会话，或在交互模式下选择</td><td><code>claude --resume abc123 &quot;query&quot;</code></td></tr><tr><td><code>--continue</code></td><td>在当前目录中加载最近的对话</td><td><code>claude --continue</code></td></tr><tr><td><code>--dangerously-skip-permissions</code></td><td>跳过权限提示（谨慎使用）</td><td><code>claude --dangerously-skip-permissions</code></td></tr></tbody></table><p><code>--output-format json</code> 标志对于脚本编写和自动化特别有用，允许您以编程方式解析 Claude 的响应。</p><p>有关打印模式（<code>-p</code>）的详细信息，包括输出格式、流式传输、详细日志记录和编程使用，请参阅 <a href="https://docs.anthropic.com/zh-CN/docs/claude-code/sdk"><strong>SDK 文档</strong></a>。</p><h1 id="交互模式"><a class="markdownIt-Anchor" href="#交互模式"></a> 交互模式</h1><p>Claude Code 会话中键盘快捷键、输入模式和交互功能的完整参考。</p><h2 id="键盘快捷键"><a class="markdownIt-Anchor" href="#键盘快捷键"></a> 键盘快捷键</h2><h3 id="通用控制"><a class="markdownIt-Anchor" href="#通用控制"></a> 通用控制</h3><table><thead><tr><th><strong>快捷键</strong></th><th><strong>描述</strong></th><th><strong>上下文</strong></th></tr></thead><tbody><tr><td><code>Ctrl+C</code></td><td>取消当前输入或生成</td><td>标准中断</td></tr><tr><td><code>Ctrl+D</code></td><td>退出 Claude Code 会话</td><td>EOF 信号</td></tr><tr><td><code>Ctrl+L</code></td><td>清除终端屏幕</td><td>保留对话历史</td></tr><tr><td><code>上/下箭头</code></td><td>导航命令历史</td><td>回调之前的输入</td></tr><tr><td><code>Esc</code> + <code>Esc</code></td><td>编辑上一条消息</td><td>双击 Escape 键修改</td></tr></tbody></table><h3 id="多行输入"><a class="markdownIt-Anchor" href="#多行输入"></a> 多行输入</h3><table><thead><tr><th><strong>方法</strong></th><th><strong>快捷键</strong></th><th><strong>上下文</strong></th></tr></thead><tbody><tr><td>快速转义</td><td><code>\</code> + <code>Enter</code></td><td>在所有终端中工作</td></tr><tr><td>macOS 默认</td><td><code>Option+Enter</code></td><td>macOS 上的默认设置</td></tr><tr><td>终端设置</td><td><code>Shift+Enter</code></td><td>在 <code>/terminal-setup</code> 之后</td></tr><tr><td>粘贴模式</td><td>直接粘贴</td><td>用于代码块、日志</td></tr></tbody></table><h3 id="快速命令"><a class="markdownIt-Anchor" href="#快速命令"></a> 快速命令</h3><table><thead><tr><th><strong>快捷键</strong></th><th><strong>描述</strong></th><th><strong>注释</strong></th></tr></thead><tbody><tr><td>开头的 <code>#</code></td><td>内存快捷键 - 添加到 <a href="http://CLAUDE.md">CLAUDE.md</a></td><td>提示文件选择</td></tr><tr><td>开头的 <code>/</code></td><td>斜杠命令</td><td>参见 <a href="https://docs.anthropic.com/zh-CN/docs/claude-code/slash-commands"><strong>斜杠命令</strong></a></td></tr></tbody></table><h2 id="vim-模式-2"><a class="markdownIt-Anchor" href="#vim-模式-2"></a> Vim 模式</h2><p>使用 <code>/vim</code> 命令启用 vim 风格编辑，或通过 <code>/config</code> 永久配置。</p><h3 id="模式切换"><a class="markdownIt-Anchor" href="#模式切换"></a> 模式切换</h3><table><thead><tr><th><strong>命令</strong></th><th><strong>动作</strong></th><th><strong>从模式</strong></th></tr></thead><tbody><tr><td><code>Esc</code></td><td>进入 NORMAL 模式</td><td>INSERT</td></tr><tr><td><code>i</code></td><td>在光标前插入</td><td>NORMAL</td></tr><tr><td><code>I</code></td><td>在行首插入</td><td>NORMAL</td></tr><tr><td><code>a</code></td><td>在光标后插入</td><td>NORMAL</td></tr><tr><td><code>A</code></td><td>在行尾插入</td><td>NORMAL</td></tr><tr><td><code>o</code></td><td>在下方打开新行</td><td>NORMAL</td></tr><tr><td><code>O</code></td><td>在上方打开新行</td><td>NORMAL</td></tr></tbody></table><h3 id="导航normal-模式"><a class="markdownIt-Anchor" href="#导航normal-模式"></a> 导航（NORMAL 模式）</h3><table><thead><tr><th><strong>命令</strong></th><th><strong>动作</strong></th></tr></thead><tbody><tr><td><code>h</code>/<code>j</code>/<code>k</code>/<code>l</code></td><td>向左/下/上/右移动</td></tr><tr><td><code>w</code></td><td>下一个单词</td></tr><tr><td><code>e</code></td><td>单词末尾</td></tr><tr><td><code>b</code></td><td>上一个单词</td></tr><tr><td><code>0</code></td><td>行首</td></tr><tr><td><code>$</code></td><td>行尾</td></tr><tr><td><code>^</code></td><td>第一个非空白字符</td></tr><tr><td><code>gg</code></td><td>输入开头</td></tr><tr><td><code>G</code></td><td>输入结尾</td></tr></tbody></table><h3 id="编辑normal-模式"><a class="markdownIt-Anchor" href="#编辑normal-模式"></a> 编辑（NORMAL 模式）</h3><table><thead><tr><th><strong>命令</strong></th><th><strong>动作</strong></th></tr></thead><tbody><tr><td><code>x</code></td><td>删除字符</td></tr><tr><td><code>dd</code></td><td>删除行</td></tr><tr><td><code>D</code></td><td>删除到行尾</td></tr><tr><td><code>dw</code>/<code>de</code>/<code>db</code></td><td>删除单词/到末尾/向后</td></tr><tr><td><code>cc</code></td><td>更改行</td></tr><tr><td><code>C</code></td><td>更改到行尾</td></tr><tr><td><code>cw</code>/<code>ce</code>/<code>cb</code></td><td>更改单词/到末尾/向后</td></tr><tr><td><code>.</code></td><td>重复上次更改</td></tr></tbody></table><p>在终端设置中配置您首选的换行行为。运行 <code>/terminal-setup</code> 为 iTerm2 和 VSCode 终端安装 Shift+Enter 绑定。</p><h2 id="命令历史"><a class="markdownIt-Anchor" href="#命令历史"></a> 命令历史</h2><p>Claude Code 为当前会话维护命令历史：</p><ul><li><p>历史按工作目录存储</p></li><li><p>使用 <code>/clear</code> 命令清除</p></li><li><p>使用上/下箭头导航（参见上面的键盘快捷键）</p></li><li><p><strong>Ctrl+R</strong>：反向搜索历史（如果终端支持）</p></li><li><p><strong>注意</strong>：历史扩展（<code>!</code>）默认禁用</p></li></ul><h1 id="斜杠命令"><a class="markdownIt-Anchor" href="#斜杠命令"></a> 斜杠命令</h1><p>在交互式会话中使用斜杠命令控制 Claude 的行为。</p><h2 id="内置斜杠命令"><a class="markdownIt-Anchor" href="#内置斜杠命令"></a> 内置斜杠命令</h2><table><thead><tr><th><strong>命令</strong></th><th><strong>用途</strong></th></tr></thead><tbody><tr><td><code>/add-dir</code></td><td>添加额外的工作目录</td></tr><tr><td><code>/bug</code></td><td>报告错误（将对话发送给 Anthropic）</td></tr><tr><td><code>/clear</code></td><td>清除对话历史</td></tr><tr><td><code>/compact [instructions]</code></td><td>压缩对话，可选择性地提供重点指令</td></tr><tr><td><code>/config</code></td><td>查看/修改配置</td></tr><tr><td><code>/cost</code></td><td>显示令牌使用统计</td></tr><tr><td><code>/doctor</code></td><td>检查您的 Claude Code 安装的健康状况</td></tr><tr><td><code>/help</code></td><td>获取使用帮助</td></tr><tr><td><code>/init</code></td><td>使用 <a href="http://CLAUDE.md">CLAUDE.md</a> 指南初始化项目</td></tr><tr><td><code>/login</code></td><td>切换 Anthropic 账户</td></tr><tr><td><code>/logout</code></td><td>从您的 Anthropic 账户登出</td></tr><tr><td><code>/mcp</code></td><td>管理 MCP 服务器连接和 OAuth 身份验证</td></tr><tr><td><code>/memory</code></td><td>编辑 <a href="http://CLAUDE.md">CLAUDE.md</a> 内存文件</td></tr><tr><td><code>/model</code></td><td>选择或更改 AI 模型</td></tr><tr><td><code>/permissions</code></td><td>查看或更新<a href="https://docs.anthropic.com/zh-CN/docs/claude-code/iam#configuring-permissions"><strong>权限</strong></a></td></tr><tr><td><code>/pr_comments</code></td><td>查看拉取请求评论</td></tr><tr><td><code>/review</code></td><td>请求代码审查</td></tr><tr><td><code>/status</code></td><td>查看账户和系统状态</td></tr><tr><td><code>/terminal-setup</code></td><td>安装 Shift+Enter 键绑定用于换行（仅限 iTerm2 和 VSCode）</td></tr><tr><td><code>/vim</code></td><td>进入 vim 模式，在插入和命令模式之间切换</td></tr></tbody></table><h1 id="钩子"><a class="markdownIt-Anchor" href="#钩子"></a> 钩子</h1><p>通过注册shell命令来自定义和扩展Claude Code的行为</p><h1 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h1><p>Claude Code钩子是用户定义的shell命令，在Claude Code生命周期的各个点执行。钩子提供对Claude Code行为的确定性控制，确保某些操作总是发生，而不是依赖LLM选择运行它们。</p><p>示例用例包括：</p><ul><li><p><strong>通知</strong>：自定义当Claude Code等待您的输入或运行某些内容的权限时如何获得通知。</p></li><li><p><strong>自动格式化</strong>：在每次文件编辑后对.ts文件运行<code>prettier</code>，对.go文件运行<code>gofmt</code>等。</p></li><li><p><strong>日志记录</strong>：跟踪和计算所有执行的命令以用于合规性或调试。</p></li><li><p><strong>反馈</strong>：当Claude Code产生不遵循您的代码库约定的代码时提供自动反馈。</p></li><li><p><strong>自定义权限</strong>：阻止对生产文件或敏感目录的修改。</p></li></ul><p>通过将这些规则编码为钩子而不是提示指令，您将建议转换为每次预期运行时都会执行的应用程序级代码。</p><p>钩子在没有确认的情况下以您的完整用户权限执行shell命令。您有责任确保您的钩子是安全可靠的。Anthropic不对因钩子使用而导致的任何数据丢失或系统损坏承担责任。请查看<a href="https://docs.anthropic.com/zh-CN/docs/claude-code/hooks#security-considerations"><strong>安全考虑</strong></a>。</p><h2 id="快速开始-3"><a class="markdownIt-Anchor" href="#快速开始-3"></a> 快速开始</h2><p>在这个快速开始中，您将添加一个钩子来记录Claude Code运行的shell命令。</p><p>快速开始先决条件：安装<code>jq</code>用于命令行中的JSON处理。</p><h3 id="步骤1打开钩子配置"><a class="markdownIt-Anchor" href="#步骤1打开钩子配置"></a> 步骤1：打开钩子配置</h3><p>运行<code>/hooks</code> <a href="https://docs.anthropic.com/zh-CN/docs/claude-code/slash-commands"><strong>斜杠命令</strong></a>并选择<code>PreToolUse</code>钩子事件。</p><p><code>PreToolUse</code>钩子在工具调用之前运行，可以阻止它们同时向Claude提供关于如何做不同事情的反馈。</p><h3 id="步骤2添加匹配器"><a class="markdownIt-Anchor" href="#步骤2添加匹配器"></a> 步骤2：添加匹配器</h3><p>选择<code>+ Add new matcher…</code>仅在Bash工具调用上运行您的钩子。</p><p>为匹配器输入<code>Bash</code>。</p><h3 id="步骤3添加钩子"><a class="markdownIt-Anchor" href="#步骤3添加钩子"></a> 步骤3：添加钩子</h3><p>选择<code>+ Add new hook…</code>并输入此命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">jq -r <span class="string">&#x27;&quot;\(.tool_input.command) - \(.tool_input.description // &quot;No description&quot;)&quot;&#x27;</span> &gt;&gt; ~/.claude/bash-command-log.txt</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="步骤4保存您的配置"><a class="markdownIt-Anchor" href="#步骤4保存您的配置"></a> 步骤4：保存您的配置</h3><p>对于存储位置，选择<code>User settings</code>，因为您要记录到您的主目录。然后此钩子将应用于所有项目，而不仅仅是您当前的项目。</p><p>然后按Esc直到返回到REPL。您的钩子现在已注册！</p><h3 id="步骤5验证您的钩子"><a class="markdownIt-Anchor" href="#步骤5验证您的钩子"></a> 步骤5：验证您的钩子</h3><p>再次运行<code>/hooks</code>或检查<code>~/.claude/settings.json</code>以查看您的配置：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;hooks&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;PreToolUse&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;matcher&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Bash&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;hooks&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;command&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;jq -r &#x27;\&quot;\(.tool_input.command) - \(.tool_input.description // \&quot;No description\&quot;)\&quot;&#x27; &gt;&gt; ~/.claude/bash-command-log.txt&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="配置-2"><a class="markdownIt-Anchor" href="#配置-2"></a> 配置</h2><p>Claude Code钩子在您的<a href="https://docs.anthropic.com/zh-CN/docs/claude-code/settings"><strong>设置文件</strong></a>中配置：</p><ul><li><p><code>~/.claude/settings.json</code> - 用户设置</p></li><li><p><code>.claude/settings.json</code> - 项目设置</p></li><li><p><code>.claude/settings.local.json</code> - 本地项目设置（不提交）</p></li><li><p>企业管理策略设置</p></li></ul><h3 id="结构"><a class="markdownIt-Anchor" href="#结构"></a> 结构</h3><p>钩子按匹配器组织，其中每个匹配器可以有多个钩子：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;hooks&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;EventName&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;matcher&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ToolPattern&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;hooks&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;command&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;your-command-here&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><strong>matcher</strong>：匹配工具名称的模式（仅适用于</li></ul><p><code>PreToolUse</code>和<code>PostToolUse</code>）</p><ul><li><p>简单字符串精确匹配：<code>Write</code>仅匹配Write工具</p></li><li><p>支持正则表达式：<code>Edit|Write</code>或<code>Notebook.*</code></p></li><li><p>如果省略或为空字符串，钩子对所有匹配事件运行</p></li><li><p><strong>hooks</strong>：当模式匹配时要执行的命令数组</p></li><li><p><code>type</code>：目前仅支持<code>&quot;command&quot;</code></p></li><li><p><code>command</code>：要执行的bash命令</p></li><li><p><code>timeout</code>：（可选）命令应该运行多长时间（以秒为单位），然后取消所有正在进行的钩子。</p></li></ul><h2 id="钩子事件"><a class="markdownIt-Anchor" href="#钩子事件"></a> 钩子事件</h2><h3 id="pretooluse"><a class="markdownIt-Anchor" href="#pretooluse"></a> PreToolUse</h3><p>在Claude创建工具参数之后和处理工具调用之前运行。</p><p><strong>常见匹配器：</strong></p><ul><li><p><code>Task</code> - 代理任务</p></li><li><p><code>Bash</code> - Shell命令</p></li><li><p><code>Glob</code> - 文件模式匹配</p></li><li><p><code>Grep</code> - 内容搜索</p></li><li><p><code>Read</code> - 文件读取</p></li><li><p><code>Edit</code>, <code>MultiEdit</code> - 文件编辑</p></li><li><p><code>Write</code> - 文件写入</p></li><li><p><code>WebFetch</code>, <code>WebSearch</code> - Web操作</p></li></ul><h3 id="posttooluse"><a class="markdownIt-Anchor" href="#posttooluse"></a> PostToolUse</h3><p>在工具成功完成后立即运行。</p><p>识别与PreToolUse相同的匹配器值。</p><h3 id="notification"><a class="markdownIt-Anchor" href="#notification"></a> Notification</h3><p>当Claude Code发送通知时运行。</p><h3 id="stop"><a class="markdownIt-Anchor" href="#stop"></a> Stop</h3><p>当主Claude Code代理完成响应时运行。</p><h3 id="subagentstop"><a class="markdownIt-Anchor" href="#subagentstop"></a> SubagentStop</h3><p>当Claude Code子代理（Task工具调用）完成响应时运行。</p><h2 id="钩子输入"><a class="markdownIt-Anchor" href="#钩子输入"></a> 钩子输入</h2><p>钩子通过stdin接收包含会话信息和事件特定数据的JSON数据：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="comment">// 通用字段</span></span><br><span class="line">  <span class="attr">session_id</span>: <span class="built_in">string</span></span><br><span class="line">  <span class="attr">transcript_path</span>: <span class="built_in">string</span>  <span class="comment">// 对话JSON的路径</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 事件特定字段</span></span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="pretooluse输入"><a class="markdownIt-Anchor" href="#pretooluse输入"></a> PreToolUse输入</h3><p><code>tool_input</code>的确切模式取决于工具。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;session_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;abc123&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;transcript_path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;~/.claude/projects/.../00893aaf-19fa-41d2-8238-13269b9b3ca0.jsonl&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;tool_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Write&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;tool_input&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;file_path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/path/to/file.txt&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;content&quot;</span><span class="punctuation">:</span> <span class="string">&quot;file content&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="posttooluse输入"><a class="markdownIt-Anchor" href="#posttooluse输入"></a> PostToolUse输入</h3><p><code>tool_input</code>和<code>tool_response</code>的确切模式取决于工具。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;session_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;abc123&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;transcript_path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;~/.claude/projects/.../00893aaf-19fa-41d2-8238-13269b9b3ca0.jsonl&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;tool_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Write&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;tool_input&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;file_path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/path/to/file.txt&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;content&quot;</span><span class="punctuation">:</span> <span class="string">&quot;file content&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;tool_response&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;filePath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/path/to/file.txt&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;success&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="notification输入"><a class="markdownIt-Anchor" href="#notification输入"></a> Notification输入</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;session_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;abc123&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;transcript_path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;~/.claude/projects/.../00893aaf-19fa-41d2-8238-13269b9b3ca0.jsonl&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Task completed successfully&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Claude Code&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="stop和subagentstop输入"><a class="markdownIt-Anchor" href="#stop和subagentstop输入"></a> Stop和SubagentStop输入</h3><p>当Claude Code已经由于停止钩子而继续时，<code>stop_hook_active</code>为true。检查此值或处理记录以防止Claude Code无限运行。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;session_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;abc123&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;transcript_path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;~/.claude/projects/.../00893aaf-19fa-41d2-8238-13269b9b3ca0.jsonl&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;stop_hook_active&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="钩子输出"><a class="markdownIt-Anchor" href="#钩子输出"></a> 钩子输出</h2><p>钩子有两种方式将输出返回给Claude Code。输出传达是否阻止以及应该向Claude和用户显示的任何反馈。</p><h3 id="简单退出代码"><a class="markdownIt-Anchor" href="#简单退出代码"></a> 简单：退出代码</h3><p>钩子通过退出代码、stdout和stderr传达状态：</p><ul><li><p><strong>退出代码0</strong>：成功。<code>stdout</code>在记录模式（CTRL-R）中显示给用户。</p></li><li><p><strong>退出代码2</strong>：阻塞错误。<code>stderr</code>反馈给Claude自动处理。请参阅下面的每个钩子事件行为。</p></li><li><p><strong>其他退出代码</strong>：非阻塞错误。<code>stderr</code>显示给用户，执行继续。</p></li></ul><p>提醒：如果退出代码为0，Claude Code不会看到stdout。</p><h4 id="退出代码2行为"><a class="markdownIt-Anchor" href="#退出代码2行为"></a> 退出代码2行为</h4><table><thead><tr><th><strong>钩子事件</strong></th><th><strong>行为</strong></th></tr></thead><tbody><tr><td><code>PreToolUse</code></td><td>阻止工具调用，向Claude显示错误</td></tr><tr><td><code>PostToolUse</code></td><td>向Claude显示错误（工具已运行）</td></tr><tr><td><code>Notification</code></td><td>不适用，仅向用户显示stderr</td></tr><tr><td><code>Stop</code></td><td>阻止停止，向Claude显示错误</td></tr><tr><td><code>SubagentStop</code></td><td>阻止停止，向Claude子代理显示错误</td></tr></tbody></table><h3 id="高级json输出"><a class="markdownIt-Anchor" href="#高级json输出"></a> 高级：JSON输出</h3><p>钩子可以在<code>stdout</code>中返回结构化JSON以获得更复杂的控制：</p><h4 id="通用json字段"><a class="markdownIt-Anchor" href="#通用json字段"></a> 通用JSON字段</h4><p>所有钩子类型都可以包含这些可选字段：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;continue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="comment">// Claude是否应该在钩子执行后继续（默认：true）</span></span><br><span class="line">  <span class="attr">&quot;stopReason&quot;</span><span class="punctuation">:</span> <span class="string">&quot;string&quot;</span> <span class="comment">// 当continue为false时显示的消息</span></span><br><span class="line">  <span class="attr">&quot;suppressOutput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="comment">// 在记录模式中隐藏stdout（默认：false）</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果<code>continue</code>为false，Claude在钩子运行后停止处理。</p><ul><li><p>对于<code>PreToolUse</code>，这与<code>&quot;decision&quot;: &quot;block&quot;</code>不同，后者仅阻止特定工具调用并向Claude提供自动反馈。</p></li><li><p>对于<code>PostToolUse</code>，这与<code>&quot;decision&quot;: &quot;block&quot;</code>不同，后者向Claude提供自动反馈。</p></li><li><p>对于<code>Stop</code>和<code>SubagentStop</code>，这优先于任何<code>&quot;decision&quot;: &quot;block&quot;</code>输出。</p></li><li><p>在所有情况下，<code>&quot;continue&quot; = false</code>优先于任何<code>&quot;decision&quot;: &quot;block&quot;</code>输出。</p></li></ul><p><code>stopReason</code>伴随<code>continue</code>提供显示给用户的原因，不显示给Claude。</p><h4 id="pretooluse决策控制"><a class="markdownIt-Anchor" href="#pretooluse决策控制"></a> <code>**PreToolUse**</code>决策控制</h4><p><code>PreToolUse</code>钩子可以控制工具调用是否继续。</p><ul><li><p>“approve”绕过权限系统。<code>reason</code>显示给用户但不显示给Claude。</p></li><li><p>“block”阻止工具调用执行。<code>reason</code>显示给Claude。</p></li><li><p><code>undefined</code>导致现有权限流程。<code>reason</code>被忽略。</p></li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;decision&quot;</span><span class="punctuation">:</span> <span class="string">&quot;approve&quot;</span> | <span class="string">&quot;block&quot;</span> | undefined<span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;reason&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Explanation for decision&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="posttooluse决策控制"><a class="markdownIt-Anchor" href="#posttooluse决策控制"></a> <code>**PostToolUse**</code>决策控制</h4><p><code>PostToolUse</code>钩子可以控制工具调用是否继续。</p><ul><li><p>“block”自动用<code>reason</code>提示Claude。</p></li><li><p><code>undefined</code>什么都不做。<code>reason</code>被忽略。</p></li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;decision&quot;</span><span class="punctuation">:</span> <span class="string">&quot;block&quot;</span> | undefined<span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;reason&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Explanation for decision&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="stopsubagentstop决策控制"><a class="markdownIt-Anchor" href="#stopsubagentstop决策控制"></a> <code>**Stop**</code>/<code>**SubagentStop**</code>决策控制</h4><p><code>Stop</code>和<code>SubagentStop</code>钩子可以控制Claude是否必须继续。</p><ul><li><p>“block”阻止Claude停止。您必须填充<code>reason</code>让Claude知道如何继续。</p></li><li><p><code>undefined</code>允许Claude停止。<code>reason</code>被忽略。</p></li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;decision&quot;</span><span class="punctuation">:</span> <span class="string">&quot;block&quot;</span> | undefined<span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;reason&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Must be provided when Claude is blocked from stopping&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="json输出示例bash命令编辑"><a class="markdownIt-Anchor" href="#json输出示例bash命令编辑"></a> JSON输出示例：Bash命令编辑</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将验证规则定义为（正则表达式模式，消息）元组列表</span></span><br><span class="line">VALIDATION_RULES = [</span><br><span class="line">    (</span><br><span class="line">        <span class="string">r&quot;\bgrep\b(?!.*\|)&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Use &#x27;rg&#x27; (ripgrep) instead of &#x27;grep&#x27; for better performance and features&quot;</span>,</span><br><span class="line">    ),</span><br><span class="line">    (</span><br><span class="line">        <span class="string">r&quot;\bfind\s+\S+\s+-name\b&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Use &#x27;rg --files | rg pattern&#x27; or &#x27;rg --files -g pattern&#x27; instead of &#x27;find -name&#x27; for better performance&quot;</span>,</span><br><span class="line">    ),</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">validate_command</span>(<span class="params">command: <span class="built_in">str</span></span>) -&gt; <span class="built_in">list</span>[<span class="built_in">str</span>]:</span><br><span class="line">    issues = []</span><br><span class="line">    <span class="keyword">for</span> pattern, message <span class="keyword">in</span> VALIDATION_RULES:</span><br><span class="line">        <span class="keyword">if</span> re.search(pattern, command):</span><br><span class="line">            issues.append(message)</span><br><span class="line">    <span class="keyword">return</span> issues</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    input_data = json.load(sys.stdin)</span><br><span class="line"><span class="keyword">except</span> json.JSONDecodeError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Error: Invalid JSON input: <span class="subst">&#123;e&#125;</span>&quot;</span>, file=sys.stderr)</span><br><span class="line">    sys.exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">tool_name = input_data.get(<span class="string">&quot;tool_name&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">tool_input = input_data.get(<span class="string">&quot;tool_input&quot;</span>, &#123;&#125;)</span><br><span class="line">command = tool_input.get(<span class="string">&quot;command&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> tool_name != <span class="string">&quot;Bash&quot;</span> <span class="keyword">or</span> <span class="keyword">not</span> command:</span><br><span class="line">    sys.exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证命令</span></span><br><span class="line">issues = validate_command(command)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> issues:</span><br><span class="line">    <span class="keyword">for</span> message <span class="keyword">in</span> issues:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;• <span class="subst">&#123;message&#125;</span>&quot;</span>, file=sys.stderr)</span><br><span class="line">    <span class="comment"># 退出代码2阻止工具调用并向Claude显示stderr</span></span><br><span class="line">    sys.exit(<span class="number">2</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="使用mcp工具"><a class="markdownIt-Anchor" href="#使用mcp工具"></a> 使用MCP工具</h2><p>Claude Code钩子与<a href="https://docs.anthropic.com/zh-CN/docs/claude-code/mcp"><strong>模型上下文协议（MCP）工具</strong></a>无缝协作。当MCP服务器提供工具时，它们以特殊的命名模式出现，您可以在钩子中匹配。</p><h3 id="mcp工具命名"><a class="markdownIt-Anchor" href="#mcp工具命名"></a> MCP工具命名</h3><p>MCP工具遵循模式<code>mcp__&lt;server&gt;__&lt;tool&gt;</code>，例如：</p><ul><li><p><code>mcp__memory__create_entities</code> - 内存服务器的创建实体工具</p></li><li><p><code>mcp__filesystem__read_file</code> - 文件系统服务器的读取文件工具</p></li><li><p><code>mcp__github__search_repositories</code> - GitHub服务器的搜索工具</p></li></ul><h3 id="为mcp工具配置钩子"><a class="markdownIt-Anchor" href="#为mcp工具配置钩子"></a> 为MCP工具配置钩子</h3><p>您可以针对特定的MCP工具或整个MCP服务器：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;hooks&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;PreToolUse&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;matcher&quot;</span><span class="punctuation">:</span> <span class="string">&quot;mcp__memory__.*&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;hooks&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;command&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;echo &#x27;Memory operation initiated&#x27; &gt;&gt; ~/mcp-operations.log&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;matcher&quot;</span><span class="punctuation">:</span> <span class="string">&quot;mcp__.*__write.*&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;hooks&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;command&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/home/user/scripts/validate-mcp-write.py&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="示例-2"><a class="markdownIt-Anchor" href="#示例-2"></a> 示例</h2><h3 id="代码格式化"><a class="markdownIt-Anchor" href="#代码格式化"></a> 代码格式化</h3><p>在文件修改后自动格式化代码：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;hooks&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;PostToolUse&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;matcher&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Write|Edit|MultiEdit&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;hooks&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;command&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/home/user/scripts/format-code.sh&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="通知"><a class="markdownIt-Anchor" href="#通知"></a> 通知</h3><p>自定义当Claude Code请求权限或提示输入变为空闲时发送的通知。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;hooks&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;Notification&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;matcher&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;hooks&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;command&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;python3 ~/my_custom_notifier.py&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="安全考虑"><a class="markdownIt-Anchor" href="#安全考虑"></a> 安全考虑</h2><h3 id="免责声明"><a class="markdownIt-Anchor" href="#免责声明"></a> 免责声明</h3><p><strong>使用风险自负</strong>：Claude Code钩子在您的系统上自动执行任意shell命令。通过使用钩子，您承认：</p><ul><li><p>您对配置的命令完全负责</p></li><li><p>钩子可以修改、删除或访问您的用户帐户可以访问的任何文件</p></li><li><p>恶意或编写不当的钩子可能导致数据丢失或系统损坏</p></li><li><p>Anthropic不提供任何保证，并且不对因钩子使用而导致的任何损坏承担责任</p></li><li><p>您应该在生产使用之前在安全环境中彻底测试钩子</p></li></ul><p>在将任何钩子命令添加到您的配置之前，请始终审查和理解它们。</p><h3 id="安全最佳实践"><a class="markdownIt-Anchor" href="#安全最佳实践"></a> 安全最佳实践</h3><p>以下是编写更安全钩子的一些关键实践：</p><ol><li><p><strong>验证和清理输入</strong> - 永远不要盲目信任输入数据</p></li><li><p><strong>始终引用shell变量</strong> - 使用<code>&quot;$VAR&quot;</code>而不是<code>$VAR</code></p></li><li><p><strong>阻止路径遍历</strong> - 检查文件路径中的<code>..</code></p></li><li><p><strong>使用绝对路径</strong> - 为脚本指定完整路径</p></li><li><p><strong>跳过敏感文件</strong> - 避免<code>.env</code>、<code>.git/</code>、密钥等。</p></li></ol><h3 id="配置安全"><a class="markdownIt-Anchor" href="#配置安全"></a> 配置安全</h3><p>对设置文件中钩子的直接编辑不会立即生效。Claude Code：</p><ol><li><p>在启动时捕获钩子快照</p></li><li><p>在整个会话中使用此快照</p></li><li><p>如果钩子被外部修改则发出警告</p></li><li><p>需要在<code>/hooks</code>菜单中审查更改才能应用</p></li></ol><p>这防止恶意钩子修改影响您当前的会话。</p><h2 id="钩子执行详细信息"><a class="markdownIt-Anchor" href="#钩子执行详细信息"></a> 钩子执行详细信息</h2><ul><li><p><strong>超时</strong>：默认60秒执行限制，每个命令可配置。</p><ul><li>如果任何单个命令超时，所有正在进行的钩子都会被取消。</li></ul></li><li><p><strong>并行化</strong>：所有匹配的钩子并行运行</p></li><li><p><strong>环境</strong>：在当前目录中使用Claude Code的环境运行</p></li><li><p><strong>输入</strong>：通过stdin的JSON</p></li><li><p><strong>输出</strong>：</p><ul><li><p>PreToolUse/PostToolUse/Stop：进度显示在记录中（Ctrl-R）</p></li><li><p>Notification：仅记录到调试（<code>--debug</code>）</p></li></ul></li></ul><h2 id="调试"><a class="markdownIt-Anchor" href="#调试"></a> 调试</h2><p>要排除钩子故障：</p><ol><li><p>检查<code>/hooks</code>菜单是否显示您的配置</p></li><li><p>验证您的<a href="https://docs.anthropic.com/zh-CN/docs/claude-code/settings"><strong>设置文件</strong></a>是有效的JSON</p></li><li><p>手动测试命令</p></li><li><p>检查退出代码</p></li><li><p>审查stdout和stderr格式期望</p></li><li><p>确保正确的引号转义</p></li><li><p>使用<code>claude --debug</code>调试您的钩子。成功钩子的输出如下所示。</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[DEBUG] Executing hooks for PostToolUse:Write</span><br><span class="line">[DEBUG] Getting matching hook commands for PostToolUse with query: Write</span><br><span class="line">[DEBUG] Found 1 hook matchers in settings</span><br><span class="line">[DEBUG] Matched 1 hooks for query &quot;Write&quot;</span><br><span class="line">[DEBUG] Found 1 hook commands to execute</span><br><span class="line">[DEBUG] Executing hook command: &lt;Your command&gt; with timeout 60000ms</span><br><span class="line">[DEBUG] Hook command completed with status 0: &lt;Your stdout&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>进度消息出现在记录模式（Ctrl-R）中，显示：</p><ul><li><p>正在运行哪个钩子</p></li><li><p>正在执行的命令</p></li><li><p>成功/失败状态</p></li><li><p>输出或错误消息</p></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;claude-code官网教程&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#claude-code官网教程&quot;&gt;&lt;/a&gt; Claude Code官网教程&lt;/h1&gt;
&lt;h1 id=&quot;claude-code-概述&quot;&gt;&lt;a</summary>
        
      
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="Claude" scheme="http://example.com/tags/Claude/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2013/12/24/hello-world/"/>
    <id>http://example.com/2013/12/24/hello-world/</id>
    <published>2013-12-24T09:49:32.000Z</published>
    <updated>2025-09-05T08:30:18.903Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="http://zespia.tw/hexo">Hexo</a>! This is your very first post. Check <a href="http://zespia.tw/hexo/docs">documentation</a> to learn how to use.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;http://zespia.tw/hexo&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a</summary>
        
      
    
    
    
    <category term="Sports" scheme="http://example.com/categories/Sports/"/>
    
    <category term="Baseball" scheme="http://example.com/categories/Sports/Baseball/"/>
    
    
    <category term="test" scheme="http://example.com/tags/test/"/>
    
  </entry>
  
</feed>
